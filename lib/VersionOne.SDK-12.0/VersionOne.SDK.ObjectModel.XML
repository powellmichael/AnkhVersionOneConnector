<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VersionOne.SDK.ObjectModel</name>
    </assembly>
    <members>
        <member name="T:VersionOne.SDK.ObjectModel.Effort">
            <summary>
            Represents an Effort Record in the VersionOne system
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Entity">
            <summary>
            Abstract representation of entities in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.#ctor(VersionOne.SDK.ObjectModel.AssetID,VersionOne.SDK.ObjectModel.V1Instance)">
            <summary>
            Constructor used to represent an entity that does exist in the VersionOne System
            </summary>
            <param name="id">Unique ID of this entity</param>
            <param name="instance">Instance this entity belongs to</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.#ctor(VersionOne.SDK.ObjectModel.V1Instance)">
            <summary>
            Constructor used to represent an entity that does not exist yet in the VersionOne System
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.Get``1(System.String)">
            <summary>
            Gets a simple value by name for this entity
            </summary>
            <typeparam name="T">The type of the attribute.</typeparam>
            <param name="name">Name of the attribute.</param>
            <returns>An attribute value.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.Get``1(System.String,System.Boolean)">
            <summary>
            Gets a simple value by name for this entity. Ignore cache if cachable is false
            </summary>
            <typeparam name="T">The type of the attribute.</typeparam>
            <param name="name">Name of the attribute.</param>
            <param name="cachable">False if the attribute should not be cached.</param>
            <returns>An attribute value.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.Set``1(System.String,``0)">
            <summary>
            Sets a simple value by name for this entity
            </summary>
            <typeparam name="T">The type of the attribute.</typeparam>
            <param name="name">Name of the attribute.</param>
            <param name="value">The value to set the attribute to.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.ClearCache(System.String)">
            <summary>
            Clears a cached property value.
            </summary>
            <param name="name">Name of the property;
            if null, all properties will be cleared from cache.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetSum(System.String,VersionOne.SDK.ObjectModel.Filters.EntityFilter,System.String)">
            <summary>
            Get a total of an attribute thru a multi-relation possibly slicing by a filter
            </summary>
            <param name="multiRelationName"></param>
            <param name="filter"></param>
            <param name="numericAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetReadStream">
            <summary>
            Get a read-only attachment stream for this entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetWriteStream">
            <summary>
            Gets a write-enabled attachment stream for this entity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.CommitWriteStream(System.String)">
            <summary>
            Complete saving a write-enabled attachment stream for this entity.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetRank``1(System.String)">
            <summary>
            Get Rank attribute for this Entity.
            </summary>
            <typeparam name="T">My type.</typeparam>
            <param name="attributeName">Name of the Rank attribute.</param>
            <returns>A Rank object.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetRelation``1(System.String)">
            <summary>
            Get a relation by name for this entity
            </summary>
            <typeparam name="T">The type of the related asset.</typeparam>
            <param name="name">Name of the relation attribute.</param>
            <returns>The related asset.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetRelation``1(System.String,System.Boolean)">
            <summary>
            Get a relation by name for this entity. Ignore cache if cachable is false
            </summary>
            <typeparam name="T">The type of the related asset.</typeparam>
            <param name="name">Name of the relation attribute.</param>
            <param name="cachable">False if should not be cached.</param>
            <returns>The related asset.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.SetRelation``1(System.String,``0)">
            <summary>
            Sets a relation by name for this entity
            </summary>
            <typeparam name="T">The type of the related asset.</typeparam>
            <param name="name">Name of the relation attribute.</param>
            <param name="value">What to set the relation attribute to.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetMultiRelation``1(System.String)">
            <summary>
            Get a multi-value relation by name for this entity
            </summary>
            <typeparam name="T">The type of the related asset.</typeparam>
            <param name="name">Name of the relation attribute.</param>
            <returns>IEntityCollection of T</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetMultiRelation``1(System.String,System.Boolean)">
            <summary>
            Get a multi-value relation by name for this entity. Ignore cache if cachable is false
            </summary>
            <typeparam name="T">The type of the related asset.</typeparam>
            <param name="name">Name of the relation attribute.</param>
            <param name="cachable">False if should not be cached.</param>
            <returns>IEntityCollection of T</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.Save(System.String)">
            <summary>
            Save any changes to this entity to the VersionOne System with a comment
            </summary>
            <exception cref="T:VersionOne.SDK.ObjectModel.DataException">Thrown when a rule or security violation has occurred.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.Save">
            <summary>
            Save any changes to this entity to the VersionOne System
            </summary>
            /// <exception cref="T:VersionOne.SDK.ObjectModel.DataException">Thrown when a rule or security violation has occurred.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.Equals(System.Object)">
            <summary>
            Override Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetHashCode">
            <summary>
            Override Equals
            </summary>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.ToString">
            <summary>
            Returns the AssetID token for the Entity.
            </summary>
            <returns>AssetID token for the Entity</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.op_Equality(VersionOne.SDK.ObjectModel.Entity,VersionOne.SDK.ObjectModel.Entity)">
            <summary>
            Overload equal equal operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.op_Inequality(VersionOne.SDK.ObjectModel.Entity,VersionOne.SDK.ObjectModel.Entity)">
            <summary>
            Overload not equal operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.SetListRelation``1(System.String,System.String)">
            <summary>
            Sets a List relation by name.
            </summary>
            <typeparam name="T">The Entity Type that represents the List Type</typeparam>
            <param name="attributeName">The name of the Relation Attribute</param>
            <param name="value">The name of the List value to be set in the relation</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetCustomListValue(System.String)">
            <summary>
            Gets the value of a Relation to a Custom List Type
            </summary>
            <param name="attributeName">The name of the relation attribute</param>
            <returns>A <see cref="T:VersionOne.SDK.ObjectModel.List.CustomListValue"/> representing the related Custom List Type, or null.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.RankAbove(VersionOne.SDK.ObjectModel.Entity,System.String)">
            <summary>
            Rank this entity above other entity.
            </summary>
            <param name="other"></param>
            <param name="attributeName"></param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.RankBelow(VersionOne.SDK.ObjectModel.Entity,System.String)">
            <summary>
            Rank this entity below other entity.
            </summary>
            <param name="other"></param>
            <param name="attributeName"></param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetListValue``1(System.String)">
            <summary>
            Get a list value for this entity by name
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Entity.GetCustomListTypeValues(System.String)">
            <summary>
            Gets a list of possible Custom List Type values for a relationship attribute
            </summary>
            <param name="attributeName">The "friendly" name of the attribute.</param>
            <returns></returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Entity.Instance">
            <summary>
            V1Instance this entity belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Entity.ID">
            <summary>
            Unique ID of this entity
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Entity.ChangeDate">
            <summary>
            Date this entity was last changed in UTC
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Entity.ChangeComment">
            <summary>
            Comment entered when this entity was last updated
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Entity.ChangedBy">
            <summary>
            Member or user that last changed this entity
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Entity.CreateDate">
            <summary>
            Date this entity was created in UTC
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Entity.CreateComment">
            <summary>
            Comment entered when this entity was created
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Entity.CreatedBy">
            <summary>
            Member or user that created this entity
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.ICustomAttributeDictionary">
            <summary>
            Provides access to custom fields
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ICustomAttributeDictionary.ContainsKey(System.String)">
            <summary>
            Indicates the presence of a custom field.
            </summary>
            <param name="attributeName">The friendly name of the custom field, e.g. "Origin", not "Custom_Origin".</param>
            <returns>True if the field exists.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ICustomAttributeDictionary.GetNumeric(System.String)">
            <summary>
            Gets the value of a Custom Field as a numeric.
            </summary>
            <param name="attributeName">The friendly name of the custom field, e.g. "Origin", not "Custom_Origin".</param>
            <returns>The value of the field as a double, or null</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ICustomAttributeDictionary.GetBool(System.String)">
            <summary>
            Gets the value of a Custom Field as a nullable boolean.
            </summary>
            <param name="attributeName">The friendly name of the custom field, e.g. "Origin", not "Custom_Origin".</param>
            <returns>The value of the field as a boolean, or null</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ICustomAttributeDictionary.GetDate(System.String)">
            <summary>
            Gets the value of a Custom Field as a DateTime.
            </summary>
            <param name="attributeName">The friendly name of the custom field, e.g. "Origin", not "Custom_Origin".</param>
            <returns>The value of the field as a DateTime, or null</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ICustomAttributeDictionary.GetString(System.String)">
            <summary>
            Gets the value of a Custom Field as a string.
            </summary>
            <param name="attributeName">The friendly name of the custom field, e.g. "Origin", not "Custom_Origin".</param>
            <returns>The value of the field as a string, or null</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.ICustomAttributeDictionary.Item(System.String)">
            <summary>
            Gets or Sets the value of the custom field.
            </summary>
            <param name="attributeName">The friendly name of the custom field, e.g. "Origin", not "Custom_Origin".</param>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.ICustomDropdownDictionary">
            <summary>
            Provides acces to Custom List-Type values
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ICustomDropdownDictionary.ContainsKey(System.String)">
            <summary>
            Indicates the presence of a custom relation.
            </summary>
            <param name="attributeName">The friendly name of the custom relation, e.g. "Origin", not "Custom_Origin".</param>
            <returns>True if the custom relation exists.</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.ICustomDropdownDictionary.Item(System.String)">
            <summary>
            Gets or Sets the value of a custom relation.
            </summary>
            <param name="attributeName">The friendly name of the custom relation, e.g. "Origin", not "Custom_Origin".</param>
            <returns></returns>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.IListValueProperty">
            <summary>
            Represents a List Value property of an Entity
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.IListValueProperty.IsValid(System.String)">
            <summary>
            Validates a value for this relation
            </summary>
            <param name="value">The name to try</param>
            <returns>True if the name matches an item in the list, otherwise false.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.IListValueProperty.ClearCurrentValue">
            <summary>
            Removes the currently selected value
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.IListValueProperty.CurrentValue">
            <summary>
            Gets or Sets the currently saved value
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.IListValueProperty.AllValues">
            <summary>
            The names of all of the active values that this relation can be set to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Effort.Workitem">
            <summary>
            Story, Defect, Task, Test that this effort record belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Effort.Project">
            <summary>
            Project this effort record belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Effort.Member">
            <summary>
            Member this effort record belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Effort.Iteration">
            <summary>
            Iteration this effort record belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Effort.Team">
            <summary>
            Team this effort record belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Effort.Date">
            <summary>
            Date this effort record is logged against
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Effort.Value">
            <summary>
            Value of this effort record
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.AssetID">
            <summary>
            Represents a unique ID in the VersionOne system. The ToToken and FromToken methods are
            provided to convert an AssetID to and from a string for storage.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.#ctor(System.String)">
            <summary>
            Construct an AssetID by ID
            </summary>
            <param name="token">id of the Asset</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.FromToken(System.String)">
            <summary>
            Create an AssetID form a tokenized ID.
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.Equals(System.Object)">
            <summary>
            Override Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.GetHashCode">
            <summary>
            Override Equals
            </summary>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.ToString">
            <summary>
            Tokenize the ID.
            </summary>
            <returns>A string representation of the ID. The same a the Token property.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.op_Equality(VersionOne.SDK.ObjectModel.AssetID,VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Overload equal equal operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.op_Inequality(VersionOne.SDK.ObjectModel.AssetID,VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Overload not equal operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.op_Implicit(System.String)~VersionOne.SDK.ObjectModel.AssetID">
            <summary>
            Convert a string to an AssetID.
            </summary>
            <param name="idString">The tokenized ID</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.AssetID.op_Implicit(VersionOne.SDK.ObjectModel.AssetID)~System.String">
            <summary>
            Convert an AssetID to a string.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.AssetID.Token">
            <summary>
            String representation of the AssetID.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Attachment">
            <summary>
            Represents an attachment in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Attachment.WriteTo(System.IO.Stream)">
            <summary>
            Write this attachment's content to the output stream
            </summary>
            <param name="output">Stream to write the content to</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Attachment.ReadFrom(System.IO.Stream)">
            <summary>
            Read the attachment's content from the input stream
            </summary>
            <remarks>Set the ContentType and Filename properties before calling this method</remarks>
            <param name="input">Stream to read the content from</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Attachment.Delete">
            <summary>
            Deletes the attachment
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.URL">
            <summary>
            URL to VersionOne Detail Page for this Attachment
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.ContentURL">
            <summary>
            VersionOne URL where the contents of this attachment may be downloaded from
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.Asset">
            <summary>
            Asset this attachment is related to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.Description">
            <summary>
            Description of this attachment
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.ContentType">
            <summary>
            Content Type of this attachment
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.Filename">
            <summary>
            Filename of this attachment
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.Name">
            <summary>
            Name of this attachment
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.Type">
            <summary>
            Type of this attachment
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Attachment.CanDelete">
            <summary>
            True if the attachment can be deleted
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.BaseAsset">
            <summary>
            Represents the base type of members, projects, teams, etc in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.GetAttachments(VersionOne.SDK.ObjectModel.Filters.AttachmentFilter)">
            <summary>
            A collection attachments that belong to this base asset filtered by the passed in filter
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.GetNotes(VersionOne.SDK.ObjectModel.Filters.NoteFilter)">
            <summary>
            A collection notes that belong to this base asset filtered by the passed in filter
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.GetLinks(VersionOne.SDK.ObjectModel.Filters.LinkFilter)">
            <summary>
            A collection links that belong to this base asset filtered by the passed in filter
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.Delete">
            <summary>
            Deletes the Item
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.CreateLink(System.String,System.String,System.Boolean)">
            <summary>
            Create a link that belongs to this asset
            </summary>
            <param name="name">The name of the link</param>
            <param name="url">The url of the link</param>
            <param name="onMenu">True if the link is visible on this asset's detail page menu</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.CreateLink(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a link that belongs to this asset
            </summary>
            <param name="name">The name of the link</param>
            <param name="url">The url of the link</param>
            <param name="onMenu">True if the link is visible on this asset's detail page menu</param>
            <param name="attributes">required attributes</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.CreateNote(System.String,System.String,System.Boolean)">
            <summary>
            Create a n0te that belongs to this asset
            </summary>
            <param name="name">The name of the n0te</param>
            <param name="content">The content of the n0te</param>
            <param name="personal">True if the n0te is only visible to the currently logged in user</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.CreateNote(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a n0te that belongs to this asset
            </summary>
            <param name="name">The name of the n0te</param>
            <param name="content">The content of the n0te</param>
            <param name="personal">True if the n0te is only visible to the currently logged in user</param>
            <param name="attributes">required attributes</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.CreateAttachment(System.String,System.String,System.IO.Stream)">
            <summary>
            Create an attachment that belongs to this asset
            </summary>
            <param name="name">The name of the attachment</param>
            <param name="filename">The name of the original attachment file</param>
            <param name="stream">The read-enabled stream that contains the attachment content to upload</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.CreateAttachment(System.String,System.String,System.IO.Stream,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create an attachment that belongs to this asset
            </summary>
            <param name="name">The name of the attachment</param>
            <param name="filename">The name of the original attachment file</param>
            <param name="stream">The read-enabled stream that contains the attachment content to upload</param>
            <param name="attributes">required attributes</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.CreateConversation(VersionOne.SDK.ObjectModel.Member,System.String)">
            <summary>
            Creates conversation which mentioned this asset.
            </summary>
            <param name="author">Author of conversation.</param>
            <param name="content">Content of conversation</param>
            <returns>Created conversation.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.Close">
            <summary>
            Closes or Inactivates the item
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation, e.g. it is already closed or inactive.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BaseAsset.Reactivate">
            <summary>
            Reactivates the item
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation, e.g. it is already open or active.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.URL">
            <summary>
            URL to VersionOne Detail Page for this BaseAsset
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.Name">
            <summary>
            Name of the base asset
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.Description">
            <summary>
            Description of the base asset
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.MentionedInExpressions">
            <summary>
            Expressions that reference current item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.IsActive">
            <summary>
            Indicates if the entity is open or active.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.IsClosed">
            <summary>
            Indicates if the entity is closed or inactive.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.IsActiveImpl">
            <summary>
            Internal worker function to determine active state.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.IsClosedImpl">
            <summary>
            Internal worker function to determine closed state.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.CanDelete">
            <summary>
            True if the item can be deleted
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.CustomField">
            <summary>
            Simple Custom Fields
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.CustomDropdown">
            <summary>
            Custom List-Type Fields
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.CanClose">
            <summary>
            True if the item can be closed.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BaseAsset.CanReactivate">
            <summary>
            True if item can be Reactivated.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.BuildProject">
            <summary>
            Represents a Build Project in the VersionOne System
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BuildProject.GetBuildRuns(VersionOne.SDK.ObjectModel.Filters.BuildRunFilter)">
            <summary>
            A collection of Build Runs associated with this Build Project
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BuildProject.CreateBuildRun(System.String,System.DateTime)">
            <summary>
            Create a Build Run with the given name and date in this Build Project
            </summary>
            <param name="name"></param>
            <param name="date"></param>
            <returns>A new Build Run in this Build Project</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BuildProject.CreateBuildRun(System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a Build Run with the given name and date in this Build Project
            </summary>
            <param name="name"></param>
            <param name="date"></param>
            <param name="attributes">required attributes</param>
            <returns>A new Build Run in this Build Project</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BuildProject.Reference">
            <summary>
            Reference of this Build Project
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.BuildRun">
            <summary>
            Represents a Build Run in the VersionOne System
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BuildRun.GetCompletedPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Stories and Defects completed in this Build Run
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BuildRun.GetAffectedPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Stories and Defects with source changes in this Build Run
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.BuildRun.GetFoundDefects(VersionOne.SDK.ObjectModel.Filters.DefectFilter)">
            <summary>
            Defects found in this Build Run
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BuildRun.BuildProject">
            <summary>
            The Build Project this Build Run belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BuildRun.Date">
            <summary>
            The Date this Build Run ran
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BuildRun.Elapsed">
            <summary>
            The total elapsed time of the Build  Run
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BuildRun.Reference">
            <summary>
            A reference to an external system
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BuildRun.Source">
            <summary>
            The source of this Build Run
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BuildRun.Status">
            <summary>
            The status of this Build Run
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.BuildRun.ChangeSets">
            <summary>
            ChangeSets in this BuildRun
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.ChangeSet">
            <summary>
            Represents a ChangeSet in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ChangeSet.GetBuildRuns(VersionOne.SDK.ObjectModel.Filters.BuildRunFilter)">
            <summary>
            A collection of Build Runs associated with this ChangeSet
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ChangeSet.CloseImpl">
            <summary>
            Closes the ChangeSet
            </summary>
            <exception cref="T:System.InvalidOperationException">The ChangeSet is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ChangeSet.ReactivateImpl">
            <summary>
            Reopens the ChangeSet
            </summary>
            <exception cref="T:System.InvalidOperationException">The ChangeSet is an invalid state for the Operation, e.g. it is already active.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.ChangeSet.Reference">
            <summary>
            Reference of this ChangeSet
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.ChangeSet.PrimaryWorkitems">
            <summary>
            Primary workitems affected by this ChangeSet.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Conversation">
            <summary>
            Conversation/Expression entity.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Conversation.Delete">
            <summary>
            Deletes the expression.
            NOTE: only owner can delete expression.
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.Author">
            <summary>
            Message author.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.AuthoredAt">
            <summary>
            When this message was added.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.ParentConversation">
            <summary>
            Parent conversation.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.ExpressionsInConversation">
            <summary>
            Child expressions belonging to current conversation.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.Content">
            <summary>
            The content of this message.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.InReplyTo">
            <summary>
            Parent message.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.Replies">
            <summary>
            Replies posted to current item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.Mentions">
            <summary>
            Mentioned members.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Conversation.CanDelete">
            <summary>
            True if the message can be deleted.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Defect">
            <summary>
            A Defect.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.PrimaryWorkitem">
            <summary>
            Base class for Stories and Defects.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Workitem">
            <summary>
            Base class for Stories, Defects, Tasks, Tests
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.ProjectAsset">
            <summary>
            An Entity that only exists in the context of a Project.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.ProjectAsset.Project">
            <summary>
            The Project this ProjectAsset belongs in. This must be present.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.ProjectAsset.DisplayID">
            <summary>
            ID (or Number) of this entity as displayed in the VersionOne system.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Workitem.GetEffortRecords(VersionOne.SDK.ObjectModel.Filters.EffortFilter)">
            <summary>
            Effort Records tracked against this item.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Workitem.CreateEffort(System.Double)">
            <summary>
            Log an effort record against this workitem
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Workitem.CreateEffort(System.Double,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Log an effort record against this workitem
            </summary>
            <param name="value"></param>
            <param name="attributes">required attributes</param>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Workitem.CreateEffort(VersionOne.SDK.ObjectModel.Member,System.Double)">
            <summary>
            Log an effort record against this workitem with the given member and value
            </summary>
            <param name="member"></param>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Workitem.CreateEffort(VersionOne.SDK.ObjectModel.Member,System.Double,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Log an effort record against this workitem with the given member and value
            </summary>
            <param name="member"></param>
            <param name="value"></param>
            <param name="attributes">required attributes</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Workitem.CreateEffort(VersionOne.SDK.ObjectModel.Member,System.DateTime,System.Double)">
            <summary>
            Log an effort record against this workitem with the given member, date, and value
            </summary>
            <param name="member"></param>
            <param name="date"></param>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Workitem.CreateEffort(VersionOne.SDK.ObjectModel.Member,System.DateTime,System.Double,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Log an effort record against this workitem with the given member, date, and value
            </summary>
            <param name="member"></param>
            <param name="date"></param>
            <param name="value"></param>
            <param name="attributes">required attributes</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Workitem.CanTrack">
            <summary>
            Returns true if this workitem detail estimate and todo can be updated
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Workitem.Owners">
            <summary>
            Members that own this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Workitem.DetailEstimate">
            <summary>
            Estimate of effort required to implement this item.
            </summary>
            <exception cref="T:System.InvalidOperationException">If setting DetailEstimate is not allowed at this level.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Workitem.Done">
            <summary>
            Effort already expended to implement this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Workitem.ToDo">
            <summary>
            Remaining effort required to complete implementation of this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Workitem.Reference">
            <summary>
            Cross-reference of this item with an external system.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.PrimaryWorkitem.CreateTask(System.String)">
            <summary>
            Create a task that belongs to this item
            </summary>
            <param name="name">The name of the task</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.PrimaryWorkitem.CreateTask(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a task that belongs to this item
            </summary>
            <param name="name">The name of the task</param>
            <param name="attributes">required attributes</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.PrimaryWorkitem.CreateTest(System.String)">
            <summary>
            Create a test that belongs to this item
            </summary>
            <param name="name">The name of the test</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.PrimaryWorkitem.CreateTest(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a test that belongs to this item
            </summary>
            <param name="name">The name of the test</param>
            <param name="attributes">required attributes</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.PrimaryWorkitem.GetTotalDetailEstimate(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Gets the estimate of total effort required to implement this item.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.PrimaryWorkitem.GetTotalDone(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Gets the total effort already expended to implement this item.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.PrimaryWorkitem.GetTotalToDo(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Gets the total remaining effort required to complete implementation of this item.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.PrimaryWorkitem.GetSecondaryWorkitems(VersionOne.SDK.ObjectModel.Filters.SecondaryWorkitemFilter)">
            <summary>
            Collection of Tasks and Tests that belong to this primary workitem
            </summary>
            <param name="filter">How to filter the secondary workitems. To get only Tasks, pass a TaskFilter. To get only Tests, pass a TestFilter.</param>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Team">
            <summary>
            The Team this item is assigned to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Iteration">
            <summary>
            The Iteration this item is assigned to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Theme">
            <summary>
            The Theme this item is assigned to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Status">
            <summary>
            This item's Status
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Priority">
            <summary>
            This Item's Priority
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Source">
            <summary>
            This Item's Source
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.RankOrder">
            <summary>
            This item's order.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Estimate">
            <summary>
            High-level estimate (in story points) of this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Goals">
            <summary>
            Goals this item is assigned to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Requests">
            <summary>
            Requests associated with this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.Issues">
            <summary>
            Issues associated with this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.BlockingIssues">
            <summary>
            Issues that are preventing the completion of this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.AffectedByDefects">
            <summary>
            Defects affecting this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.PrimaryWorkitem.CompletedIn">
            <summary>
            Build Run's this Primary Workitem was completed in
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Defect.GetAffectedPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Primary workitems that are affected by this defect
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Defect.CloseImpl">
            <summary>
            Inactivates the Defect
            </summary>
            <exception cref="T:System.InvalidOperationException">The Defect is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Defect.ReactivateImpl">
            <summary>
            Reactivates the Defect
            </summary>
            <exception cref="T:System.InvalidOperationException">The Defect is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.Environment">
            <summary>
            Free text field indicating environment this Defect was identified in.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.FoundBy">
            <summary>
            Free text field indicating who found the defect.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.FoundInBuild">
            <summary>
            Build number where this Defect was found.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.FoundInVersion">
            <summary>
            Version where this Defect was found.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.ResolvedInBuild">
            <summary>
            Build number where this Defect was resolved.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.ResolutionReason">
            <summary>
            Reason this Defect was resolved.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.ResolutionDetails">
            <summary>
            Text field for the description of how this Defect was resolved.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.VerifiedBy">
            <summary>
            The Member this defect was verified by.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.Type">
            <summary>
            This Defect's Type
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Defect.FoundIn">
            <summary>
            Build Run's this Defect was found in
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.DefectTemplate">
            <summary>
            A Defect template
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.DefectTemplate.GenerateDefect">
            <summary>
            Creates a Defect from this Template, copying Attributes and Relationships
            </summary>
            <returns>A Defect just like this Template</returns>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.EntityValidationException">
            <summary>
            Validation exception containing entity and corresponding invalid attribute names.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.EntityValidationException.InvalidAttributeNames">
            <summary>
            Invalid attribute names.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.EntityValidationException.Entity">
            <summary>
            Entity that caused validation to fail.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.EntityValidationException.#ctor(VersionOne.SDK.ObjectModel.Entity,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Validation exception constructor.
            </summary>
            <param name="entity">Invalid entity</param>
            <param name="invalidAttributeNames">Validation result - invalid attribute names</param>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.EntityValidator">
            <summary>
            Entity validator that can be used on-demand and is hooked into entity Save/Create actions
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.EntityValidator.#ctor(VersionOne.SDK.ObjectModel.V1Instance)">
            <summary>
            Entity validator constructor.
            </summary>
            <param name="instance">V1Instance to retrieve APIClient required field validator</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.EntityValidator.Validate(VersionOne.SDK.ObjectModel.Entity,System.String)">
            <summary>
            Validate single attribute of an entity.
            </summary>
            <param name="entity">Entity</param>
            <param name="attribute">Name of attribute to be validated</param>
            <returns>true, if attribute value is valid; false, otherwise.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.EntityValidator.Validate(VersionOne.SDK.ObjectModel.Entity)">
            <summary>
            Validate single Entity.
            </summary>
            <param name="entity">Entity to validate</param>
            <returns>Collection of invalid attribute names</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.EntityValidator.Validate(System.Collections.Generic.IEnumerable{VersionOne.SDK.ObjectModel.Entity})">
            <summary>
            Validate a collection of entities.
            </summary>
            <param name="entities">Entities to validate</param>
            <returns>Dictionary where Entities are keys, and corresponding validation results are values (<see cref="M:VersionOne.SDK.ObjectModel.EntityValidator.Validate(VersionOne.SDK.ObjectModel.Entity)"/>).</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.EntityValidator.Validate(VersionOne.SDK.APIClient.Asset)">
            <summary>
            Pass asset to required field validator.
            We cannot resolve asset by AssetID because in newly created entities it is null until Commit() is actually executed, that's why it is used directly.
            </summary>
            <param name="asset">Asset to validate.</param>
            <returns>Collection of invalid attribute names</returns>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Environment">
            <summary>
            Environment representation.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Environment.GetTestSets(VersionOne.SDK.ObjectModel.Filters.TestSetFilter)">
            <summary>
            TestSets associated with this Environment
            </summary>
            <param name="filter"></param>
            <returns>Criteria to filter TestSets on. </returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Environment.Close">
            <summary>
            Closes or Inactivates the item
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation, e.g. it is already closed or inactive.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Environment.Reactivate">
            <summary>
            Reactivates the item
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation, e.g. it is already open or active.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.Name">
            <summary>
            Name of the Environment
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.Project">
            <summary>
            The Project this ProjectAsset belongs in. This must be present.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.DisplayID">
            <summary>
            ID (or Number) of this entity as displayed in the VersionOne system.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.IsActive">
            <summary>
            Indicates if the entity is open or active.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.IsClosed">
            <summary>
            Indicates if the entity is closed or inactive.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.IsActiveImpl">
            <summary>
            Internal worker function to determine active state.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.IsClosedImpl">
            <summary>
            Internal worker function to determine closed state.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.CanClose">
            <summary>
            True if the item can be closed.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Environment.CanReactivate">
            <summary>
            True if item can be Reactivated.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Epic">
            <summary>
            Represents an Epic in the VersionOne system.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Epic.GetChildEpics(VersionOne.SDK.ObjectModel.Filters.EpicFilter)">
            <summary>
            Epics that are immediate children of this Epic
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Epic.GetChildStories(VersionOne.SDK.ObjectModel.Filters.StoryFilter)">
            <summary>
            Stories that are immediate children of this Epic
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Epic.CloseImpl">
            <summary>
            Inactivates the Story
            </summary>
            <exception cref="T:System.InvalidOperationException">The Epic is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Epic.ReactivateImpl">
            <summary>
            Reactivates the Story
            </summary>
            <exception cref="T:System.InvalidOperationException">The Epic is an invalid state for the Operation, e.g. it is already active.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Epic.GenerateChildStory">
            <summary>
            Generates a Story that is the child of this Epic
            </summary>
            <returns>A Story that is a child of this Epic</returns>
            <exception cref="T:System.InvalidOperationException">If the Epic is not able to Generate a child Story</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Epic.GenerateChildEpic">
            <summary>
            Generates an Epic that is the child of this Epic
            </summary>
            <exception cref="T:System.InvalidOperationException">If the Epic is not able to Generate a child Epic</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Super">
            <summary>
            The Parent Epic that this Epic belongs to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Parent">
            <summary>
            The Workitem this Epic is assigned to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Swag">
            <summary>
            Swag for the Epic.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Value">
            <summary>
            Value for the Epic.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Status">
            <summary>
            This Epic's Status
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Priority">
            <summary>
            This Epic's Priority
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Source">
            <summary>
            This Epic's Source
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Risk">
            <summary>
            This Epic's Risk
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Type">
            <summary>
            This Epic's Type.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.RankOrder">
            <summary>
            This item's order.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Goals">
            <summary>
            Goals this Epic is assigned to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Requests">
            <summary>
            Requests associated with this Epic.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.Issues">
            <summary>
            Issues associated with this Epic.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.BlockingIssues">
            <summary>
            Blocking Issues associated with this Epic.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.RequestedBy">
            <summary>
            Name of person or organization requesting this Epic.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.CanGenerateChildStory">
            <summary>
            True if a Story can be generated from this Epic
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Epic.CanGenerateChildEpic">
            <summary>
            True if an Epic can be generated from this Epic.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.SDKException">
            <summary>
            Base Exception for SDK Exceptions
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.ApplicationUnavailableException">
            <summary>
            Thrown when an instance is validated and cannot communicate with the VersionOne Application
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.AuthenticationException">
            <summary>
            Throw when an instance is validated and the supplied credentials are invalid
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.DataException">
            <summary>
            Thrown when an entity is saved and a rule or security violation has occurred.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.AttachmentLengthExceededException">
            <summary>
            Thrown when an attachment stream exceeds the server's allowed size limit
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.AttachmentFilter">
            <summary>
            A filter for Attachments
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.EntityFilter">
            <summary>
            Base class of all filters
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EntityFilter.OrderBy">
            <summary>
            Add the names of the properties you wish to sort on. The first in the list is the primary
            sort, the second is the secondary sort, etc.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EntityFilter.Find">
            <summary>
            Specify the fields to search in. Add the names of any string (free text) fields on the assets you are searching.
            If not set, the search will search in Name, Description, and ShortName if there is one.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EntityFilter.CreateDateUtc">
            <summary>
            Filtering conditions that restrict creation date of Entity.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EntityFilter.ChangeDateUtc">
            <summary>
            Filtering conditions that restrict modification date of Entity.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.EntityFilter.StringSearcher">
            <summary>
            Specifies a string to search for and an optional set of fields to search in.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EntityFilter.StringSearcher.Fields">
            <summary>
            Specify the fields to search in. Add the names of any string fields on the assets you are searching.
            If not set, the seach will search in Name and Description.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Filters.EntityFilter.StringSearcher.SearchString">
            <summary>
            The string to search for.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.AttachmentFilter.Name">
            <summary>
            Item name. Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.AttachmentFilter.Description">
            <summary>
            Item description. Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.AttachmentFilter.Type">
            <summary>
            The Attachment's Type.  Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.AttachmentFilter.Asset">
            <summary>
            The Attachment's Related Asset.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.State">
            <summary>
            State of the asset.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.State.Active">
            <summary>
            Active or open.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.State.Closed">
            <summary>
            Closed or inactive.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.BaseAssetFilter">
            <summary>
            Filter on BaseAssets
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.BaseAssetFilter.Name">
            <summary>
            Item name. Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.BaseAssetFilter.Description">
            <summary>
            Item description. Must be complete match.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Filters.BaseAssetFilter.State">
            <summary>
            Current State of the asset.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.BuildProjectFilter">
            <summary>
             A filter for Build Projects
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.BuildProjectFilter.References">
            <summary>
            Reference of the Build Project
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.BuildRunFilter">
            <summary>
             A filter for Build Runs
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.BuildRunFilter.BuildProjects">
            <summary>
            Build Project of the Build Run
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.BuildRunFilter.References">
            <summary>
            Reference of the Build Run
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.BuildRunFilter.Source">
            <summary>
            Source of the Build Run
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.BuildRunFilter.Status">
            <summary>
            Status of the Build Run
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.BuildRunFilter.ChangeSets">
            <summary>
            ChangeSets in the Build Run
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.ChangeSetFilter">
            <summary>
            A filter for ChangeSets
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ChangeSetFilter.Reference">
            <summary>
            Cross-reference of the ChangeSet with an external system.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.ComparisonSearcher`1">
            <summary>
            Specifies a set of filter expressions to compare specipied attribute with. To specify &gt;, &lt;, &gt;=, &lt;=, =, != condition
            FilterTerm.Operator is used.
            </summary>
            <typeparam name="T">Type of argument to compare.</typeparam>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Filters.ComparisonSearcher`1.AddTerm(VersionOne.SDK.APIClient.FilterTerm.Operator,`0)">
            <summary>
            Add new filtering term.
            </summary>
            <param name="op">Filtering operator.</param>
            <param name="value">Value to compare with.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Filters.ComparisonSearcher`1.Clear">
            <summary>
            Clear internal term collection.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Filters.ComparisonSearcher`1.Terms">
            <summary>
            Return optimized term collection.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.ConversationFilter">
            <summary>
            Filter for getting Expression/Conversation.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ConversationFilter.Author">
            <summary>
            Filter on the Author property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ConversationFilter.AuthoredAt">
            <summary>
            Filter on the AuthoredAt property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ConversationFilter.Conversation">
            <summary>
            Filter on the Conversation property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ConversationFilter.ExpressionsInConversation">
            <summary>
            Filter on the ExpressionsInConversation property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ConversationFilter.InReplyTo">
            <summary>
            Filter on the InReplyTo property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ConversationFilter.Replies">
            <summary>
            Filter on the Replies property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ConversationFilter.Mentions">
            <summary>
            Filter on the Mentions property.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Filters.ConversationFilter.State">
            <summary>
            Current State of the asset.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.DateSearcher">
            <summary>
            When SDK user adds term:
            date&gt;YYYY-MM-DD HH:MM:SS.TTT we build query: date&gt;=YYYY-MM-DD HH:MM:(SS+1)
            date&gt;=YYYY-MM-DD HH:MM:SS.TTT we build query: date&gt;=YYYY-MM-DD HH:MM:SS
            date&lt;YYYY-MM-DD HH:MM:SS.TTT we build query: date&lt;YYYY-MM-DD HH:MM:SS
            date&lt;=YYYY-MM-DD HH:MM:SS.TTT we build query: date&lt;YYYY-MM-DD HH:MM:(SS+1)
            date=YYYY-MM-DD HH:MM:SS.TTT we build query: date&gt;=YYYY-MM-DD HH:MM:SS &amp; date&lt;YYYY-MM-DD HH:MM:(SS+1)
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Filters.DateSearcher.AddTerm(VersionOne.SDK.APIClient.FilterTerm.Operator,System.DateTime)">
            <summary>
            Adds comparison term. Only specified Operators supported:
            <ul>
            <li>GreaterThan</li>
            <li>GreaterThanOrEqual</li>
            <li>LessThan</li>
            <li>LessThanOrEqual</li>
            <li>Equal</li>
            </ul>
            </summary>
            <param name="op">Operator to apply.</param>
            <param name="date">Value to compare with.</param>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.EffortFilter">
            <summary>
            Filter for Effort Records
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EffortFilter.Workitem">
            <summary>
            Filter on Workitem effort records belong to
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EffortFilter.Project">
            <summary>
            Filter on Project effort records belong to
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EffortFilter.Member">
            <summary>
            Filter on Member effort records belong to
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EffortFilter.Iteration">
            <summary>
            Filter on Iteration effort records belong to
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EffortFilter.Team">
            <summary>
            Filter on Team effort records belong to
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EffortFilter.Date">
            <summary> 
            Filter on Date range effort records belong to.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.EnvironmentFilter">
            <summary>
            Filter for getting Environment.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EnvironmentFilter.Name">
            <summary>
            Name of this item.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EnvironmentFilter.Project">
            <summary>
            Project this item belongs to.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EnvironmentFilter.DisplayID">
            <summary>
            DisplayID of this item.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EnvironmentFilter.TestSet">
            <summary>
            TestSets of this item.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.EpicFilter">
            <summary>
            Filter for getting Epics.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.WorkitemFilter">
            <summary>
            Filter for Workitems
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.ProjectAssetFilter">
            <summary>
            Filter on Project Assets
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ProjectAssetFilter.Project">
            <summary>
            Project this item belongs to.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ProjectAssetFilter.DisplayID">
            <summary>
            DisplayID of this item.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.WorkitemFilter.Owners">
            <summary>
            Item owner(s).
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.WorkitemFilter.Reference">
            <summary>
            Filter on Reference.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.WorkitemFilter.DetailEstimate">
            <summary>
            Filter on DetailEstimate. Must be an exact match. Add a null to the list to include items that have not been estimated.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Status">
            <summary>
            Filter on Status.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Source">
            <summary>
            Filter on Source.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Theme">
            <summary>
            Filter on Theme assigned.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Risk">
            <summary>
            Filter on Risk.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Type">
            <summary>
            Filter on Type.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Priority">
            <summary>
            Filter on Priority.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Parent">
            <summary>
            Filter on Parent.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Goals">
            <summary>
            Filter on Goals.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Issues">
            <summary>
            Filter on Issues.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.BlockingIssues">
            <summary>
            Filter on Blocked Issues.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.EpicFilter.Requests">
            <summary>
            Filter on Requests.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.GoalFilter">
            <summary>
            A filter for Goals
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.GoalFilter.Type">
            <summary>
            The Goal's Type
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.GoalFilter.Priority">
            <summary>
            The Goal's Priority
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.IssueFilter">
            <summary>
            A Filter for Issues
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IssueFilter.Type">
            <summary>
            The Issue's Type
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IssueFilter.Priority">
            <summary>
            The Issue's Priority
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IssueFilter.ResolutionReason">
            <summary>
            Reason this Issue was resolved.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IssueFilter.Owner">
            <summary>
            Members that own this issue
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IssueFilter.Team">
            <summary>
            Teams that own this issue
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IssueFilter.Retrospective">
            <summary>
            Retrospectives related to this issue
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.LinkFilter">
            <summary>
            A filter for Links
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.LinkFilter.Name">
            <summary>
            Item name. Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.LinkFilter.URL">
            <summary>
            Item URL. Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.LinkFilter.Asset">
            <summary>
            The Link's Related Asset.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.MemberFilter">
            <summary>
            Filter for getting Members
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MemberFilter.ShortName">
            <summary>
            The short or abbreviated name of the user or member.  This name is often used in the owner's dropdown.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MemberFilter.Username">
            <summary>
            The username this user or member uses to login to the VersionOne system
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.DefectFilter">
            <summary>
            Filter for getting defects.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter">
            <summary>
            Filter for PrimaryWorkitems
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Status">
            <summary>
            Filter on Story status.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Team">
            <summary>
            Filter on Team assigned.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Iteration">
            <summary>
            Filter on Iteration this item is in.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Theme">
            <summary>
            Filter on Theme assigned.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Goals">
            <summary>
            Filter on Goals.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Requests">
            <summary>
            Filter on Requests.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Issues">
            <summary>
            Filter on Issues.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.BlockingIssues">
            <summary>
            Filter on BlockingIssues.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.AffectedByDefects">
            <summary>
            Filter on AffectedByDefects.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Estimate">
            <summary>
            Filter on Estimate. Must be an exact match. Add a null to the list to include items that have not been estimated.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Source">
            <summary>
            Filter on Source.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.Priority">
            <summary>
            Filter on Priority.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter.CompletedIn">
            <summary>
            Filter on Build Runs
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.Type">
            <summary>
            Filter on the Type property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.FoundBy">
            <summary>
            Filter on the FoundBy property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.FoundInBuild">
            <summary>
            Filter on the FoundInBuild property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.FoundInVersion">
            <summary>
            Filter on the FoundInVersion property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.Environment">
            <summary>
            Filter on the Environment property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.ResolvedInBuild">
            <summary>
            Filter on the ResolvedInBuild property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.ResolutionReason">
            <summary>
            Filter on the ResolutionReason property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.VerifiedBy">
            <summary>
            Filter on the VerifiedBy property.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.AffectedPrimaryWorkitems">
            <summary>
            Filter on stories or defects affected.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.DefectFilter.FoundIn">
            <summary>
            Filter on build runs.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.IterationState">
            <summary>
            State of the Iteration.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IterationState.Future">
            <summary>
            Not active yet.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IterationState.Active">
            <summary>
            Active or open.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IterationState.Closed">
            <summary>
            Closed or inactive.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.IterationFilter">
            <summary>
            Filter iterations.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IterationFilter.State">
            <summary>
            State of the Iteration (Future, Active, or Closed)
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.IterationFilter.Schedule">
            <summary>
            Schedules this item belongs to.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.MessageFilter">
            <summary>
             A filter for Messages
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MessageFilter.RelatedAsset">
            <summary>
            Filter on RelatedAsset.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MessageFilter.IsUnread">
            <summary>
            Filter on read or unread messages.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MessageFilter.IsArchived">
            <summary>
            Filter on archived or unarchived messages.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MessageFilter.Recipient">
            <summary>
            Only messages sent to a particular recipient.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MessageFilter.Sender">
            <summary>
            Only messages sent by a particular recipient.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MessageReceiptFilter.Recipient">
            <summary>
            Message receiver.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.MessageReceiptFilter.Message">
            <summary>
            Message itself.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.NoteFilter">
            <summary>
            A filter for Notes
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.NoteFilter.Name">
            <summary>
            Item name. Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.NoteFilter.Content">
            <summary>
            Item Content. Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.NoteFilter.Type">
            <summary>
            The Note's Type.  Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.NoteFilter.Asset">
            <summary>
            The Note's Related Asset.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.NoteFilter.InResponseTo">
            <summary>
            Note this Note is a response to.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.ProjectFilter">
            <summary>
            Filter for getting projects.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ProjectFilter.Targets">
            <summary>
            Filter on Targets
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ProjectFilter.Parent">
            <summary>
            Filter on Parent Project
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ProjectFilter.TestSuite">
            <summary>
            Filter on Project TestSuite
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.RegressionPlanFilter">
            <summary>
            A filter for Regression Plans
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionPlanFilter.Owners">
            <summary>
            Item owner(s).
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionPlanFilter.Reference">
            <summary>
            Filter on Reference.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.RegressionSuiteFilter">
            <summary>
            A filter for Regression Suites
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionSuiteFilter.DisplayID">
            <summary>
            DisplayID of this item.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionSuiteFilter.Owners">
            <summary>
            Item owner(s).
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionSuiteFilter.Reference">
            <summary>
            Filter on Reference.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionSuiteFilter.Estimate">
            <summary>
            Filter on Estimate.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionSuiteFilter.RegressionPlan">
            <summary>
            RegressionPlan associate with suite.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter">
            <summary>
            A filter for Regression Tests.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter.GeneratedFrom">
            <summary>
            Test which was used to generate this item.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter.GeneratedTests">
            <summary>
            Tests generated from this item.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter.Tags">
            <summary>
            Tags of this item.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter.RegressionSuites">
            <summary>
            Related Regression Suites.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter.Owners">
            <summary>
            Item owner(s).
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter.Status">
            <summary>
            Item status.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter.Type">
            <summary>
            Item category.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter.Reference">
            <summary>
            Reference of this item.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.RequestFilter">
            <summary>
            A Filter for Requests
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.Owner">
            <summary>
            The Member who pwns the Request.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.Source">
            <summary>
            The Request's Source
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.Type">
            <summary>
            The Request's Type
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.Status">
            <summary>
            The Request's Status
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.Priority">
            <summary>
            The Request's Priority
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.RequestedBy">
            <summary>
            Name of person or organization originating the Request.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.Reference">
            <summary>
            Cross-reference of the Request with an external system.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.ResolutionReason">
            <summary>
            Reason the Request was resolved.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RequestFilter.Issues">
            <summary>
            Issues related to this Request.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter">
            <summary>
            A filter for Retrospectives
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter.Iteration">
            <summary>
            The Iteration the Retrospective was conducted for
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter.FacilitatedBy">
            <summary>
            The Retrospective Facilitator
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter.Team">
            <summary>
            The Team the Retrospecive belongs to
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter.Date">
            <summary>
            The date this Retrospective was conducted.  Typically stored as DateTime.Date (rounded to the day).
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.ScheduleFilter">
            <summary>
            Filter for getting schedules.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ScheduleFilter.Projects">
            <summary>
            Filter on Projects
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.SecondaryWorkitemFilter">
            <summary>
            Filter for Tasks and Tests
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.SecondaryWorkitemFilter.Parent">
            <summary>
            Filter on which Story or Defect this workitem is attached to.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.StoryFilter">
            <summary>
            Filter for getting stories.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.RequestedBy">
            <summary>
            Name of person or organization requesting this Story.  Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.Build">
            <summary>
            Build number associated with this Story.  Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.Epic">
            <summary>
            The Epic that this Story belongs to.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.Risk">
            <summary>
            This Story's Risk.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.Type">
            <summary>
            This Story's Type.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.Customer">
            <summary>
            Member assigned as a customer for this Story.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.DependsOnStories">
            <summary>
            Stories that this Story depends on.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.DependentStories">
            <summary>
            Stories that depend on this Story.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.StoryFilter.IdentifiedIn">
            <summary>
            The (optional) Retrospective this Story was Identified in.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.TaskFilter">
            <summary>
            Filter for Tasks
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.TaskFilter.Build">
            <summary>
            Build number associated with the Task.  Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.TaskFilter.Source">
            <summary>
            The Source of this Task
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.TaskFilter.Type">
            <summary>
            The Tasks's Type.  Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.TaskFilter.Status">
            <summary>
            The Status of the Task
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.TeamFilter">
            <summary>
            Filter for getting teams.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.TestFilter">
            <summary>
            Filter for Tests
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.TestFilter.Type">
            <summary>
            The Tests' Type.  Must be complete match.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.TestFilter.Status">
            <summary>
            The Status of the Test
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.TestSetFilter">
            <summary>
            Filter for Test Set retrieval.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.TestSetFilter.RegressionSuite">
            <summary>
            Filter on related Regression suites
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.TestSetFilter.Environment">
            <summary>
            Filter by Environment
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.ThemeFilter">
            <summary>
            Filter for getting themes.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Parent">
            <summary>
            Parent theme's
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Status">
            <summary>
            Filter on Status.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Source">
            <summary>
            Filter on Source.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Theme">
            <summary>
            Filter on Theme assigned.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Customer">
            <summary>
            Filter on Customer.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Risk">
            <summary>
            Filter on Risk.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Type">
            <summary>
            Filter on Type.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Priority">
            <summary>
            Filter on Priority.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Goals">
            <summary>
            Filter on Goals.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Filters.ThemeFilter.Owners">
            <summary>
            Filter on Owners.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Filters.TrackedEpicFilter">
            <summary>
            Filter for getting tracked Epics for a set of projects.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Filters.TrackedEpicFilter.#ctor(System.Collections.Generic.IEnumerable{VersionOne.SDK.ObjectModel.Project})">
            <summary>
            Create filter to obtain tracked Epics for enlisted projects.
            </summary>
            <param name="projects"></param>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Goal">
            <summary>
            Represents a Goal in the VersionOne system.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Goal.GetTargetedBy(VersionOne.SDK.ObjectModel.Filters.ProjectFilter)">
            <summary>
            A collection of Projects Targeted by this Goal
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Goal.GetEpics(VersionOne.SDK.ObjectModel.Filters.EpicFilter)">
            <summary>
            Epics assigned to this Goal.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Goal.GetThemes(VersionOne.SDK.ObjectModel.Filters.ThemeFilter)">
            <summary>
            Themes assigned to this Goal.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Goal.GetPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Stories and Defects assigned to this Goal.
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Goal.CloseImpl">
            <summary>
            Inactivates the Goal
            </summary>
            <exception cref="T:System.InvalidOperationException">The Goal is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Goal.ReactivateImpl">
            <summary>
            Reactivates the Goal
            </summary>
            <exception cref="T:System.InvalidOperationException">The Goal is an invalid state for the Operation, e.g. it is already active.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Goal.Type">
            <summary>
            This Goal's Type
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Goal.Priority">
            <summary>
            This Goal's Priority
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Issue">
            <summary>
            Represents an issue in the VersionOne system.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GetPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Stories and Defects associated with this Issue.
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GetRequests(VersionOne.SDK.ObjectModel.Filters.RequestFilter)">
            <summary>
            Requests associated with this Issue.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GetBlockedPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Stories and Defects that cannot be completed because of this Issue.
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GetEpics(VersionOne.SDK.ObjectModel.Filters.EpicFilter)">
            <summary>
            Epics  associated with this Issue.
            </summary>
            <param name="filter">Criteria to filter epics on.</param>
            <returns> A collection epics that belong to this issue filtered by the 
            passed in filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GetBlockedEpics(VersionOne.SDK.ObjectModel.Filters.EpicFilter)">
            <summary>
            Epics that cannot be completed because of this Issue.
            </summary>
            <param name="filter">Criteria to filter epics on.</param>
            <returns> A collection epics cannot be completed because of 
            this Issue filtered by the passed in filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.CloseImpl">
            <summary>
            Inactivates the Issue
            </summary>
            <exception cref="T:System.InvalidOperationException">The Issue is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.ReactivateImpl">
            <summary>
            Reactivates the Issue
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GenerateStory">
            <summary>
            Creates a Story from this Issue.
            </summary>
            <returns>A Story in the VersionOne system related to this Issue.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GenerateStory(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a Story from this Issue.
            </summary>
            <param name="attributes">required attributes</param>
            <returns>A Story in the VersionOne system related to this Issue.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GenerateDefect">
            <summary>
            Creates a Defect from this Issue.
            </summary>
            <returns>A Defect in the VersionOne system related to this Issue.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Issue.GenerateDefect(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a Defect from this Issue.
            </summary>
            <param name="attributes">required attributes</param>
            <returns>A Defect in the VersionOne system related to this Issue.</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.RankOrder">
            <summary>
            This Issue rank order among all Issues.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.Source">
            <summary>
            This Issue's Source
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.Type">
            <summary>
            This Issue's Type
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.Priority">
            <summary>
            This Issue's Priority
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.ResolutionReason">
            <summary>
            Reason this Issue was resolved.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.ResolutionDetails">
            <summary>
            Text field for the description of how this Request was resolved.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.IdentifiedBy">
            <summary>
            Name of person or organization originating this Issue.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.Reference">
            <summary>
            Cross-reference of this Issue with an external system.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.TargetDate">
            <summary>
            Date this Issue brings the system down to a screeching halt
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.Team">
            <summary>
            The Team this Issue is assigned to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.Owner">
            <summary>
            The Member who pwns this Issue.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Issue.Retrospectives">
            <summary>
            The Retrospectives related to this Issue
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Iteration">
            <summary>
            Represents an iteration or sprint in the VersionOne System
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Iteration.GetPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            A collection of stories and defects that belong to this iteration
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Iteration.GetEffortRecords(VersionOne.SDK.ObjectModel.Filters.EffortFilter)">
            <summary>
            A read-only collection of Effort Records that belong to this iteration
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Iteration.Activate">
            <summary>
            Open or activate this iteration.  Iteration must be in a future state.
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation, e.g. it is already open or active.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Iteration.MakeFuture">
            <summary>
            Mark this iteration as future.  Iteration must be in an open or active state.
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation, e.g. it is already in a future state.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Iteration.GetTotalEstimate(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Return the total estimate for all stories and defects in this iteration optionally filtered
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Iteration.GetTotalDetailEstimate(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total estimate for all workitems in this iteration optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Iteration.GetTotalToDo(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total to do for all workitems in this iteration optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Iteration.GetTotalDone(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total done for all workitems in this iteration optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Iteration.Schedule">
            <summary>
            The Schedule this Iteration belongs in. This must be present.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Iteration.BeginDate">
            <summary>
            The begin date or start date of this iteration
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Iteration.EndDate">
            <summary>
            The end date of this iteration
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Iteration.CanActivate">
            <summary>
            True if this iteration is in the future state and can be opened or activated
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Iteration.IsFuture">
            <summary>
            True if this iteration is marked future
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Iteration.CanMakeFuture">
            <summary>
            True if this iteration is open or active and can be marked future
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Link">
            <summary>
            Represents a Link in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Link.Delete">
            <summary>
            Deletes the link
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Link.Asset">
            <summary>
            Asset this link is related to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Link.OnMenu">
            <summary>
            True is this link is visible on the asset's detail page menu
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Link.URL">
            <summary>
            URL this link points to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Link.Name">
            <summary>
            Name of this link
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Link.CanDelete">
            <summary>
            True if the link can be deleted
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.List.ListValue">
            <summary>
            Represents a List Type Asset
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.List.ListValue.ToString">
            <summary>
            Return name of ListValue.
            </summary>
            <returns></returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.List.ListValue.Name">
            <summary>
            The Name
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.List.ListValue.Description">
            <summary>
            The (optional) Description
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.List.CustomListValue.Name">
            <summary>
            The Name
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.List.CustomListValue.Description">
            <summary>
            The (optional) Description
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Member">
            <summary>
            Represents a user or member in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetOwnedPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Stories and Defects owned by this member.
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetOwnedSecondaryWorkitems(VersionOne.SDK.ObjectModel.Filters.SecondaryWorkitemFilter)">
            <summary>
            Tasks and Tests owned by this member.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetOwnedThemes(VersionOne.SDK.ObjectModel.Filters.ThemeFilter)">
            <summary>
            A collection of Themes owned by this member.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetOwnedIssues(VersionOne.SDK.ObjectModel.Filters.IssueFilter)">
            <summary>
            A read-only collection of Issues owned by this member.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetOwnedRequests(VersionOne.SDK.ObjectModel.Filters.RequestFilter)">
            <summary>
            A read-only collection of Requests owned by this member.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetOwnedEpics(VersionOne.SDK.ObjectModel.Filters.EpicFilter)">
            <summary>
            Epics owned by this member.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetEffortRecords(VersionOne.SDK.ObjectModel.Filters.EffortFilter)">
            <summary>
            A collection of Effort Records that belong to this member
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.CloseImpl">
            <summary>
            Inactivates the Member
            </summary>
            <exception cref="T:System.InvalidOperationException">The Member is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.ReactivateImpl">
            <summary>
            Reactivates the Member
            </summary>
            <exception cref="T:System.InvalidOperationException">The Member is an invalid state for the Operation, e.g. it is already active.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetTotalEstimate(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Return the total estimate for all stories and defects owned by this member optionally filtered
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetTotalDetailEstimate(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total detail estimate for all workitems owned by this member optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetTotalToDo(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total to do for all workitems owned by this member optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.GetTotalDone(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total detail estimate for all workitems owned by this member optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.CreateConversation(VersionOne.SDK.ObjectModel.Member,System.String)">
            <summary>
            Creates conversation which mentioned this member.
            </summary>
            <param name="author">Author of conversation.</param>
            <param name="content">Content of conversation</param>
            <returns>Created conversation.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Member.CreateConversation(System.String)">
            <summary>
            Creates conversation with this author.
            </summary>
            <param name="content">Content of conversation.</param>
            <returns>Created conversation.</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.ShortName">
            <summary>
            The short or abbreviated name of the user or member.  This name is often used in the owner's dropdown.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.Username">
            <summary>
            The username this user or member uses to login to the VersionOne system
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.Password">
            <summary>
            The password this user or member uses to login to the VersionOne system.
            This is a write-only property.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.DefaultRole">
            <summary>
            The default role of the user or member. Determines the member's permissions when assigned to a project.  Also determines the member's global privileges.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.Email">
            <summary>
            The Email for this member.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.Phone">
            <summary>
            The phone number for this member.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.NotifyViaEmail">
            <summary>
            A flag indicating whether this member desires to receive e-mail notifications.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.AssignedProjects">
            <summary>
            Projects this member is assigned to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.Expressions">
            <summary>
            Conversation messages created by the member.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Member.SendConversationEmails">
            <summary>
            Turn conversation notifications on or off.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Message">
            <summary>
            Represents a notification Message in the VersionOne System
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Message.Send">
            <summary>
            Send this message. Must have at least one recipeint. Once sent it may not be modified. Message will always be saved as part of the send.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Message.MarkAsRead">
            <summary>
            Mark the message as having been read by the recipient.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Message.MarkAsUnread">
            <summary>
            Mark the message as having not been read by the recipient.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Message.MarkAsArchived">
            <summary>
            Mark the message as having been archived.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Message.MarkAsUnarchived">
            <summary>
            Mark the message as not having been archived.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Message.DeleteReceipt">
            <summary>
            Deletes any message receipt associated with this message for the logged in user.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Message.Recipients">
            <summary>
            Members this message is addressed to. Message may not be sent until there is at least one recipient.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Message.RelatedAsset">
            <summary>
            An asset associated with this message.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Message.ReadyToSend">
            <summary>
            True if the item is in a state in which it may be sent.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Message.IsUnread">
            <summary>
            True if the item has not been read
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Message.IsRead">
            <summary>
            True if the item has been read
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Message.IsUnarchived">
            <summary>
            True if the item has not been archived
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Message.IsArchived">
            <summary>
            True if the item has been archived
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.MessageException">
            <summary>
             An exception with a message.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.MessageException.#ctor(System.String)">
            <summary>
             Basic constructor.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.NotRecipientofMessageException">
            <summary>
            The operation or attribute is only avalable when the logged in user is a recipient of the message.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.NotRecipientofMessageException.#ctor">
            <summary>
             Basic constructor.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.MessageReceipt">
            <summary>
            Represents an associate between a Message and a recipient in the VersionOne System
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.MessageReceipt.MarkAsRead">
            <summary>
            Mark the message as having been read by the recipient.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.MessageReceipt.MarkAsUnread">
            <summary>
            Mark the message as having not been read by the recipient.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.MessageReceipt.MarkAsArchived">
            <summary>
            Mark the message as having been archived.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.MessageReceipt.MarkAsUnarchived">
            <summary>
            Mark the message as not having been archived.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.MessageReceipt.Delete">
            <summary>
            Mark the message as having been archived.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.MessageReceipt.Recipient">
            <summary>
            Member this message is addressed to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.MessageReceipt.Message">
            <summary>
            Member this message is addressed to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.MessageReceipt.IsUnread">
            <summary>
            True if the item has not been read
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.MessageReceipt.IsRead">
            <summary>
            True if the item has been read
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.MessageReceipt.IsUnarchived">
            <summary>
            True if the item has not been archived
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.MessageReceipt.IsArchived">
            <summary>
            True if the item has been archived
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Note">
            <summary>
            Represents a M0te in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Note.Delete">
            <summary>
            Deletes the n0te
            </summary>
            <exception cref="T:System.InvalidOperationException">The item is an invalid state for the Operation.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Note.CreateResponse(System.String,System.String,System.Boolean)">
            <summary>
            Create a response to this n0te
            </summary>
            <param name="name">The name of the n0te</param>
            <param name="content">The content of the n0te</param>
            <param name="personal">True if the n0te is only visible to the currently logged in user</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Note.CreateResponse(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a response to this n0te
            </summary>
            <param name="name">The name of the n0te</param>
            <param name="content">The content of the n0te</param>
            <param name="personal">True if the n0te is only visible to the currently logged in user</param>
            <param name="attributes">required attributes</param>
            <returns></returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Note.Type">
            <summary>
            The type this n0te belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Note.Asset">
            <summary>
            Asset this n0te is related to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Note.Personal">
            <summary>
            True if this n0te is visible only to the currently logged in user
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Note.Content">
            <summary>
            Content of this n0te
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Note.Name">
            <summary>
            Name of this n0te
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Note.InResponseTo">
            <summary>
            N0te this n0te is a response to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Note.Responses">
            <summary>
            Responses to this n0te
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Note.CanDelete">
            <summary>
            True if the n0te can be deleted
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Project">
            <summary>
            Represents a project or release in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateSubProject(System.String,System.DateTime,VersionOne.SDK.ObjectModel.Schedule)">
            <summary>
            Create a sub project under this project with a name, begin date, and optional schedule
            </summary>
            <param name="name">Name of the new project.</param>
            <param name="beginDate">Date the schedule will begin.</param>
            <param name="schedule">The new schedule. If null, the project will inherit the parent project's schedule.</param>
            <returns>The newly created project.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateSubProject(System.String,System.DateTime,VersionOne.SDK.ObjectModel.Schedule,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a sub project under this project with a name, begin date, and optional schedule
            </summary>
            <param name="name">Name of the new project.</param>
            <param name="beginDate">Date the schedule will begin.</param>
            <param name="attributes">required attributes</param>
            <param name="schedule">The new schedule. If null, the project will inherit the parent project's schedule.</param>
            <returns>The newly created project.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateSubProject(System.String,System.DateTime)">
            <summary>
            Create a sub project under this project with a name and begin date
            </summary>
            <param name="name">Name of the new project.</param>
            <param name="beginDate">Date the schedule will begin.</param>
            <returns>The newly created project.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateEpic(System.String)">
            <summary>
            Create a new Epic in this Project.
            </summary>
            <param name="name">The initial name of the Epic.</param>
            <returns>A new Epic.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateEpic(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Epic in this Project.
            </summary>
            <param name="name">The initial name of the Epic.</param>
            <param name="attributes">required attributes</param>
            <returns>A new Epic.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateStory(System.String)">
            <summary>
            Create a new Story in this Project.
            </summary>
            <param name="name">The initial name of the Story.</param>
            <returns>A new Story.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateStory(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Story in this Project.
            </summary>
            <param name="name">The initial name of the Story.</param>
            <param name="attributes">required attributes</param>
            <returns>A new Story.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateDefect(System.String)">
            <summary>
            Create a new Defect in this Project.
            </summary>
            <param name="name">The initial name of the Defect.</param>
            <returns>A new Defect.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateDefect(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Defect with required attributes in this Project.
            </summary>
            <param name="name">name of the Defect</param>
            <param name="attributes">required attributes</param>
            <returns>new Defect</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateTheme(System.String)">
            <summary>
            Create a new Theme in this Project.
            </summary>
            <param name="name">The initial name of the Theme.</param>
            <returns>A new Theme.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateTheme(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Theme in this Project.
            </summary>
            <param name="name">The initial name of the Theme.</param>
            <param name="attributes">required attributes</param>
            <returns>A new Theme.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateGoal(System.String)">
            <summary>
            Create a new Goal in this Project.
            </summary>
            <param name="name">The initial name of the Goal.</param>
            <returns>A new Goal.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateGoal(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Goal in this Project.
            </summary>
            <param name="name">The initial name of the Goal.</param>
            <param name="attributes">required attributes</param>
            <returns>A new Goal.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateRequest(System.String)">
            <summary>
            Create a new Request in this Project.
            </summary>
            <param name="name">The initial name of the Request.</param>
            <returns>A new Request.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateRequest(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Request in this Project.
            </summary>
            <param name="name">The initial name of the Request.</param>
            <param name="attributes">required attributes</param>
            <returns>A new Request.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateIssue(System.String)">
            <summary>
            Create a new Issue in this Project.
            </summary>
            <param name="name">The initial name of the Issue.</param>
            <returns>A new Issue.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateIssue(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Issue in this Project.
            </summary>
            <param name="name">The initial name of the Issue.</param>
            <param name="attributes">required attributes</param>
            <returns>A new Issue.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateRetrospective(System.String)">
            <summary>
            Create a new Retrospective in this Project.
            </summary>
            <param name="name">The initial name of the Retrospective.</param>
            <returns>A new Retrospective.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateRetrospective(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Retrospective in this Project.
            </summary>
            <param name="name">The initial name of the Retrospective.</param>
            <param name="attributes">required attributes</param>
            <returns>A new Retrospective.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateIteration">
            <summary>
            Create a new Iteration in the Project where the schedule is defined.  Use the suggested system values for the new iteration.
            </summary>
            <returns>A new Iteration.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateIteration(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Iteration in the Project where the schedule is defined.  Use the suggested system values for the new iteration.
            </summary>
            <param name="attributes">required attributes</param>
            <returns>A new Iteration.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateIteration(System.String,System.DateTime,System.DateTime)">
            <summary>
            Create a new Iteration in the Project where the schedule is defined.
            </summary>
            <param name="name">The initial name of the Iteration.</param>
            <param name="beginDate">The begin date of the Iteration.</param>
            <param name="endDate">The end date of the Iteration.</param>
            <returns>A new Iteration.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateIteration(System.String,System.DateTime,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Iteration in the Project where the schedule is defined.
            </summary>
            <param name="name">The initial name of the Iteration.</param>
            <param name="beginDate">The begin date of the Iteration.</param>
            <param name="endDate">The end date of the Iteration.</param>
            <param name="attributes">required attributes</param>
            <returns>A new Iteration.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateRegressionPlan(System.String)">
            <summary>
            Create a new Regression Plan in the Project.
            </summary>
            <param name="name">Regression Plan title.</param>
            <returns>A new Regression Plan.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateRegressionPlan(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Regression Plan in the Project with additional attributes.
            </summary>
            <param name="name">Regression Plan title.</param>
            <param name="attributes">Additional attributes for inicialization Regression Plan.</param>
            <returns>A new Regression Plan.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateTestSet(System.String,VersionOne.SDK.ObjectModel.RegressionSuite,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Test Set in the project.
            </summary>
            <param name="name">Test Set name</param>
            <param name="suite">Parent Regression suite</param>
            <param name="attributes">Additional attributes</param>
            <returns>Newly created test set</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateTestSet(System.String,VersionOne.SDK.ObjectModel.RegressionSuite)">
            <summary>
            Create a new Test Set in the project.
            </summary>
            <param name="name">Test Set name</param>
            <param name="suite">Parent Regression suite</param>
            <returns>Newly created test set</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateEnvironment(System.String)">
            <summary>
            Create a new Environment in the Project.
            </summary>
            <param name="name">Environment title.</param>
            <returns>A new Environment.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateEnvironment(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Environment in the Project with additional attributes.
            </summary>
            <param name="name">Environment title.</param>
            <param name="attributes">Additional attributes for inicialization Environment.</param>
            <returns>A new Environment.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateRegressionTest(System.String)">
            <summary>
            Create a new Regression Test in the Project.
            </summary>
            <param name="name">Name of Regression Test.</param>
            <returns>A new Regression Test.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CreateRegressionTest(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Regression Test in the Project with additional attributes.
            </summary>
            <param name="name">Name of Regression Test.</param>
            <param name="attributes">Additional attributes for inicialization Regression Test.</param>
            <returns>A new Regression Test.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetThisAndAllChildProjects">
            <summary>
            Returns a flattened collection of this project and all Projects that descend from this project. (readonly)
            </summary>
            <returns>a flattened collection of this project and all Projects that descend from this project</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetChildProjects(VersionOne.SDK.ObjectModel.Filters.ProjectFilter)">
            <summary>
            A collection of sub-projects that belong to this project
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all child projects in the project are returned.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetChildProjects(VersionOne.SDK.ObjectModel.Filters.ProjectFilter,System.Boolean)">
            <summary>
            A collection of sub-projects that belong to this project
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all child projects in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub-project or not. This only adds open subprojects.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetRegressionPlans(VersionOne.SDK.ObjectModel.Filters.RegressionPlanFilter,System.Boolean)">
            <summary>
            A collection of regression plans that belong to this project
            </summary>
            <param name="filter">Criteria to filter on. Project(s) will be set automatically. If null, all related regression items in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub-project or not. This only adds open subprojects.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetRegressionPlans(VersionOne.SDK.ObjectModel.Filters.RegressionPlanFilter)">
            <summary>
            A collection of regression plans that belong to this project
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all related regression items in the project are returned.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetEffortRecords(VersionOne.SDK.ObjectModel.Filters.EffortFilter)">
            <summary>
            A collection of Effort records that belong to this project
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all effort records in the project are returned.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetEffortRecords(VersionOne.SDK.ObjectModel.Filters.EffortFilter,System.Boolean)">
            <summary>
            A collection of Effort records that belong to this project
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all effort records in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetEpics(VersionOne.SDK.ObjectModel.Filters.EpicFilter)">
            <summary>
            Get Epics in this Project filtered as specified in the passed in filter. Does not include subprojects.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all epics in the project are returned.</param>
            <returns>A readonly ICollection of Epic</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetEpics(VersionOne.SDK.ObjectModel.Filters.EpicFilter,System.Boolean)">
            <summary>
            Get Epics in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all epics in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>A readonly ICollection of Epic</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTrackedEpics">
            <summary>
            Get tracked Epics that belong to current Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetStories(VersionOne.SDK.ObjectModel.Filters.StoryFilter)">
            <summary>
            Get stories in this Project filtered as specified in the passed in filter. Does not include subprojects.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all stories in the project are returned.</param>
            <returns>An ICollection of Story</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetStories(VersionOne.SDK.ObjectModel.Filters.StoryFilter,System.Boolean)">
            <summary>
            Get stories in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all stories in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>An ICollection of Story</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetDefects(VersionOne.SDK.ObjectModel.Filters.DefectFilter)">
            <summary>
            Get Defects in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all defects in the project are returned.</param>
            <returns>An ICollection of Defect</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetDefects(VersionOne.SDK.ObjectModel.Filters.DefectFilter,System.Boolean)">
            <summary>
            Get Defects in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all defects in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>An ICollection of Defect</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTestSets(VersionOne.SDK.ObjectModel.Filters.TestSetFilter)">
            <summary>
            Get test sets in this Project filtered as specified in the passed in filter. Does not include subprojects.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all test sets in the project are returned.</param>
            <returns>Collection of Test Sets</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTestSets(VersionOne.SDK.ObjectModel.Filters.TestSetFilter,System.Boolean)">
            <summary>
            Get test sets in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all test sets in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>Collection of Test Sets</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Get PrimaryWorkitems in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all stories and defects in the project are returned.</param>
            <returns>An ICollection of PrimaryWorkitem</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter,System.Boolean)">
            <summary>
            Get PrimaryWorkitems in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all stories and defects in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>An ICollection of PrimaryWorkitem</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetIterations(VersionOne.SDK.ObjectModel.Filters.IterationFilter)">
            <summary>
            Get Iterations in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all iterations in the project are returned.</param>
            <returns>A readonly ICollection of Iteration</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetIterations(VersionOne.SDK.ObjectModel.Filters.IterationFilter,System.Boolean)">
            <summary>
            Get Iterations in this Project's Schedule filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Schedule will be set automatically. If null, all iterations in the project's schedule are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>A readonly ICollection of Iteration</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetThemes(VersionOne.SDK.ObjectModel.Filters.ThemeFilter)">
            <summary>
            Get Themes in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all themes in the project are returned.</param>
            <returns>A readonly ICollection of Theme</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetThemes(VersionOne.SDK.ObjectModel.Filters.ThemeFilter,System.Boolean)">
            <summary>
            Get Themes in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all themes in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>A readonly ICollection of Theme</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetSecondaryWorkitems(VersionOne.SDK.ObjectModel.Filters.SecondaryWorkitemFilter)">
            <summary>
            Get SecondaryWorkitems in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all tasks and tests in the project are returned.</param>
            <returns>An ICollection of SecondaryWorkitem</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetSecondaryWorkitems(VersionOne.SDK.ObjectModel.Filters.SecondaryWorkitemFilter,System.Boolean)">
            <summary>
            Get SecondaryWorkitems in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all tasks and tests in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>An ICollection of SecondaryWorkitem</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTasks(VersionOne.SDK.ObjectModel.Filters.TaskFilter)">
            <summary>
            Get Tasks in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all tasks in the project are returned.</param>
            <returns>An ICollection of SecondaryWorkitem</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTests(VersionOne.SDK.ObjectModel.Filters.TestFilter)">
            <summary>
            Get Tests in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all tests in the project are returned.</param>
            <returns>An ICollection of Tests</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetRequests(VersionOne.SDK.ObjectModel.Filters.RequestFilter)">
            <summary>
            Get Requests in this Project filtered as specified in the passed in filter. Does not include subprojects.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all Requests in the project are returned.</param>
            <returns>An ICollection of Requests</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetRequests(VersionOne.SDK.ObjectModel.Filters.RequestFilter,System.Boolean)">
            <summary>
            Get Requests in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all Requests in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>A readonly ICollection of Request</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetGoals(VersionOne.SDK.ObjectModel.Filters.GoalFilter)">
            <summary>
            Get Goals in this Project filtered as specified in the passed in filter. Does not include subprojects.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all Goals in the project are returned.</param>
            <returns>An ICollection of Goals</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetGoals(VersionOne.SDK.ObjectModel.Filters.GoalFilter,System.Boolean)">
            <summary>
            Get Goals in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all Goals in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>An ICollection of Goals</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetRetrospectives(VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter)">
            <summary>
            Get Retrospective in this Project filtered as specified in the passed in filter. Does not include subprojects.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all Retrospective in the project are returned.</param>
            <returns>A readonly ICollection of Retrospective</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetRetrospectives(VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter,System.Boolean)">
            <summary>
            Get Retrospective in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all Retrospective in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>A readonly ICollection of Retrospective</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetIssues(VersionOne.SDK.ObjectModel.Filters.IssueFilter)">
            <summary>
            Get Issues in this Project filtered as specified in the passed in filter. Does not include subprojects.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all Issues in the project are returned.</param>
            <returns>A readonly ICollection of Issues</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetIssues(VersionOne.SDK.ObjectModel.Filters.IssueFilter,System.Boolean)">
            <summary>
            Get Issues in this Project filtered as specified in the passed in filter.
            </summary>
            <param name="filter">Criteria to filter on. Project will be set automatically. If null, all Issues in the project are returned.</param>
            <param name="includeSubprojects">Specifies whether to include items from sub project or not. This only adds open subprojects.</param>
            <returns>A readonly ICollection of Issues</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.CloseImpl">
            <summary>
            Inactivates the Project
            </summary>
            <exception cref="T:System.InvalidOperationException">The Project is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.ReactivateImpl">
            <summary>
            Reactivates the Project
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTotalEstimate(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter,System.Boolean)">
            <summary>
            Return the total estimate for all stories and defects in this project optionally filtered
            </summary>
            <param name="filter">Criteria to filter stories and defects on.</param>
            <param name="includeChildProjects">If true, include open sub projects, otherwise only include this project</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTotalEstimate(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Return the total estimate for all stories and defects in this project optionally filtered
            </summary>
            <param name="filter">Criteria to filter stories and defects on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTotalDetailEstimate(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter,System.Boolean)">
            <summary>
            Return the total detail estimate for all workitems in this project optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <param name="includeChildProjects">If true, include open sub projects, otherwise only include this project</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTotalDetailEstimate(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total detail estimate for all workitems in this project optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTotalToDo(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter,System.Boolean)">
            <summary>
            Return the total to do for all workitems in this project optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <param name="includeChildProjects">If true, include open sub projects, otherwise only include this project</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTotalToDo(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total to do for all workitems in this project optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTotalDone(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter,System.Boolean)">
            <summary>
            Return the total done for all workitems in this project optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <param name="includeChildProjects">If true, include open sub projects, otherwise only include this project</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Project.GetTotalDone(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total done for all workitems in this project optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.ParentProject">
            <summary>
            Parent project this project belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.BeginDate">
            <summary>
            Date this project begins
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.EndDate">
            <summary>
            Date this project ends
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.Schedule">
            <summary>
            Schedule that defines how this project's iterations are spaced
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.Owner">
            <summary>
            The Member who pwns this Project.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.TestSuite">
            <summary>
            TestSuite assigned to this Project.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.Status">
            <summary>
            This Project's Status
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.BuildProjects">
            <summary>
            Build Projects associated with this Project
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.AssignedMembers">
            <summary>
            Members assigned to this project
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.StoryTemplates">
            <summary>
            A read-only collection of StoryTemplates in this Project
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Project.DefectTemplates">
            <summary>
            A read-only collection of DefectTemplates in the Project
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.ProxySettings">
            <summary>
            Proxy settings that you can pass to V1Instance.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.ProxySettings.Path">
            <summary>
            Proxy server path.
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.ProxySettings.Username">
            <summary>
            Proxy username
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.ProxySettings.Password">
            <summary>
            Proxy password
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.ProxySettings.Domain">
            <summary>
            Proxy domain
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ProxySettings.#ctor(System.Uri,System.String,System.String,System.String)">
            <summary>
            Create proxy settings
            </summary>
            <param name="path">Proxy server path, ex. http://proxy:3128</param>
            <param name="username">Proxy username</param>
            <param name="password">Proxy user password</param>
            <param name="domain">Proxy domain</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.ProxySettings.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Create proxy settings
            </summary>
            <param name="path">Proxy server path, ex. http://proxy:3128</param>
            <param name="username">Proxy username</param>
            <param name="password">Proxy user password</param>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Rank`1">
            <summary>
            How assets are ordered.
            </summary>
            <typeparam name="T">The type of asset being ranked.</typeparam>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Rank`1.SetAbove(`0)">
            <summary>
            Set this Entity ahead of the passed in Entity in rank order.
            </summary>
            <param name="assetToRankAheadOf">The Entity that will come next in order after this Entity.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Rank`1.SetBelow(`0)">
            <summary>
            Set this Entity after the passed in Entity in rank order.
            </summary>
            <param name="assetToRankAfter">The Entity that will come just before this Entity in rank order.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Rank`1.IsAbove(`0)">
            <summary>
            Is this Entity ahead of the passed in Entity in rank order?
            </summary>
            <param name="otherAsset">The Entity that will come next in order after this Entity.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Rank`1.IsBelow(`0)">
            <summary>
            Is this Entity after the passed in Entity in rank order.
            </summary>
            <param name="otherAsset">The Entity that will come just before this Entity in rank order.</param>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.RegressionPlan">
            <summary>
            Regression Plan representation.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionPlan.CreateRegressionSuite(System.String)">
            <summary>
             Create new Regression Suite with title assigned to this Regression Plan
            </summary>
            <param name="name">Title of the suite</param>
            <returns>Regression Suite</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionPlan.CreateRegressionSuite(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create new Regression Suite with title assigned to this Regression Plan
            </summary>
            <param name="name">Title of the suite</param>
            <param name="attributes">Additional attributes for initialization of Regression Suite.</param>
            <returns>Regression Suite</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionPlan.GetRegressionSuites(VersionOne.SDK.ObjectModel.Filters.RegressionSuiteFilter)">
            <summary>
            Projects associated with this TestSuite.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionPlan.Owner">
            <summary>
            Members that own this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionPlan.Reference">
            <summary>
            Cross-reference of this item with an external system.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.RegressionSuite">
            <summary>
            Regression Suite representation.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionSuite.AssignRegressionTest(VersionOne.SDK.ObjectModel.RegressionTest)">
            <summary>
            Assign Regression Test to this suite.
            </summary>
            <param name="regressionTest">Regression Test to assign.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionSuite.UnassignRegressionTest(VersionOne.SDK.ObjectModel.RegressionTest)">
            <summary>
            Un-assign Regression Test from this suite.
            </summary>
            <param name="regressionTest">Regression Test to un-assign.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionSuite.CreateTestSet(System.String)">
            <summary>
            Create new TestSet
            </summary>
            <param name="name">Test Set name</param>
            <returns>Created entity</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionSuite.CreateTestSet(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create new TestSet
            </summary>
            <param name="name">Test Set name</param>
            <param name="attributes">Additional attributes for the brand new Test Set</param>
            <returns>Created entity</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionSuite.GetTestSets(VersionOne.SDK.ObjectModel.Filters.TestSetFilter)">
            <summary>
            Request related Test Sets.
            </summary>
            <param name="filter">Test Set filter</param>
            <returns>Related Test Sets</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionSuite.DisplayID">
            <summary>
            ID (or Number) of this entity as displayed in the VersionOne system.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionSuite.Owner">
            <summary>
            Members that own this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionSuite.Reference">
            <summary>
            Reference is a free text field used for reference (perhaps to an external system).
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionSuite.Estimate">
            <summary>
            Estimate required to implement this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionSuite.RegressionPlan">
            <summary>
            Regression Plan associated with this suite.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionSuite.RegressionTests">
            <summary>
            Regression Tests associated with this suite.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.RegressionTest">
            <summary>
            Regression Test representation.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.RegressionTest.GetGeneratedTests">
            <summary>
            Get Tests generated from current Regression Test.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.GeneratedFrom">
            <summary>
            Source Test used to generate current Regression Test.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.Tags">
            <summary>
            Tags defined for current Regression Test.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.RegressionSuites">
            <summary>
            Related Regression Suites.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.Owners">
            <summary>
            Regression Test owners.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.Status">
            <summary>
            Regression Test status.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.Type">
            <summary>
            Test category.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.Reference">
            <summary>
            Reference value.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.ExpectedResults">
            <summary>
            Results that we expect when running the test.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.Steps">
            <summary>
            Regression Test steps description.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.Inputs">
            <summary>
            Test Inputs description.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.RegressionTest.Setup">
            <summary>
            Test Setup description.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Request">
            <summary>
            Represents a request in the VersionOne system.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Request.GetPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Stories and Defects associated with this Request.
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Request.GetEpics(VersionOne.SDK.ObjectModel.Filters.EpicFilter)">
            <summary>
            Epics associated with this Request.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Request.CloseImpl">
            <summary>
            Inactivates the Request
            </summary>
            <exception cref="T:System.InvalidOperationException">The Request is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Request.ReactivateImpl">
            <summary>
            Reactivates the Request
            </summary>
            <exception cref="T:System.InvalidOperationException">The Request is an invalid state for the Operation, e.g. it is already active.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Request.GenerateStory">
            <summary>
            Creates a Story from this Request.
            </summary>
            <returns>A Story in the VersionOne system related to this Request.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Request.GenerateStory(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a Story from this Request.
            </summary>
            <param name="attributes">required attributes</param>
            <returns>A Story in the VersionOne system related to this Request.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Request.GenerateDefect">
            <summary>
            Creates a Defect from this Request.
            </summary>
            <returns>A Defect in the VersionOne system related to this Request.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Request.GenerateDefect(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a Defect from this Request.
            </summary>
            <param name="attributes">required attributes</param>
            <returns>A Defect in the VersionOne system related to this Request.</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.Owner">
            <summary>
            The Member who pwns this Request.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.RankOrder">
            <summary>
            This Request's rank order among all Requests.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.Source">
            <summary>
            This Request's Source
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.Type">
            <summary>
            This Request's Type
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.Status">
            <summary>
            This Request's Status
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.Priority">
            <summary>
            This Request's Priority
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.RequestedBy">
            <summary>
            Name of person or organization originating this Request.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.Reference">
            <summary>
            Cross-reference of this Request with an external system.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.ResolutionReason">
            <summary>
            Reason this Request was resolved.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.ResolutionDetails">
            <summary>
            Text field for the description of how this Request was resolved.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Request.Issues">
            <summary>
            Issues associated with this Request.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Retrospective">
            <summary>
            Represents a Retrospective in the VersionOne System
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Retrospective.GetIdentifiedStories(VersionOne.SDK.ObjectModel.Filters.StoryFilter)">
            <summary>
            A read-only collection of Stories Identified in the Retrospective
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Retrospective.GetIssues(VersionOne.SDK.ObjectModel.Filters.IssueFilter)">
            <summary>
            A collection of Issues Identified in the Retrospective
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Retrospective.CreateStory(System.String)">
            <summary>
            Creates a Story related to this Retrospective
            </summary>
            <param name="name">The name of the Story</param>
            <returns>The newly saved Story</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Retrospective.CreateStory(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a Story related to this Retrospective
            </summary>
            <param name="name">The name of the Story</param>
            <param name="attributes">required attributes</param>
            <returns>The newly saved Story</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Retrospective.CreateIssue(System.String)">
            <summary>
            Creates an Issue related to this Retrospective
            </summary>
            <param name="name">The name of the Issue</param>
            <returns>The newly saved Issue</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Retrospective.CreateIssue(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an Issue related to this Retrospective
            </summary>
            <param name="name">The name of the Issue</param>
            <param name="attributes">required attributes</param>
            <returns>The newly saved Issue</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Retrospective.Project">
            <summary>
            The Project this ProjectAsset belongs in. This must be present.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Retrospective.FacilitatedBy">
            <summary>
            The Retrospective Facilitator
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Retrospective.Iteration">
            <summary>
            The Iteration this Retrospective was conducted for
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Retrospective.Date">
            <summary>
            The date this Retrospective was conducted.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Retrospective.Team">
            <summary>
            The Team this Retrospecive belongs to
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Retrospective.Summary">
            <summary>
            The Retrospective Summary
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Role">
            <summary>
            List of roles allowed on a member
            </summary>
            <remarks>The id's of these roles must match the Role id's in the VersionOne system</remarks>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.NoAccess">
            <summary>
            Has no read or write access to any entities in the VersionOne System
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.SystemAdmin">
            <summary>
            Has full access to all entities in the VersionOne System
            Can administer members, custom attributes, list values, and system wide configuration
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.MemberAdmin">
            <summary>
            Has full read and write access to all entities in the VersionOne System
            Can manage Project Membership, Program Membership, Members, Member Groups, Member Security, and Teams
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.ProjectAdmin">
            <summary>
            Has full read and write access to all entities in the VersionOne System
            Can manage Project Membership, Program Membership, and Teams
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.ProjectLead">
            <summary>
            Has full read and write access to all entities in the VersionOne System
            Cannot manage Project Membership or Program Membership
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.TeamMember">
            <summary>
            Has read access to all entities in the VersionOne System
            Has write access to all entities except Projects, Iterations, and Goals in the VersionOne System
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.Developer">
            <summary>
            Has read access to all entities in the VersionOne System
            Has write access to Tasks, Effort, Issues, Requests, and Defects in the VersionOne System
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.Tester">
            <summary>
            Has read access to all entities in the VersionOne System
            Has write access to Tests, Effort, Issues, Requests, and Defects in the VersionOne System
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.Customer">
            <summary>
            Has read access to all entities in the VersionOne System
            Has write access to Themes, Stories, Tests, Issues, Requests, Defects, and Goals in the VersionOne System
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.Observer">
            <summary>
            Has read access but no write access to all entities in the VersionOne System
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.Visitor">
            <summary>
            Has read access to Projects, Themes, Stories, Iterations, Defects, Retrospectives, and Goals but no write access in the VersionOne System
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.Inheritor">
            <summary>
            Has read access to Projects, Themes, Iterations, and Goals but no write access in the VersionOne System
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.Role.Requestor">
            <summary>
            Has read access to all entities in the VersionOne System and write access to Requests
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Role.ToString">
            <summary>
            Returns the name of the Role.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Role.Save(System.String)">
            <summary>
            Role's cannot be updated or saved
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Role.Save">
            <summary>
            Role's cannot be updated or saved
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Schedule">
            <summary>
            Represents a schedule in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Schedule.CloseImpl">
            <summary>
            Inactivates the Schedule
            </summary>
            <exception cref="T:System.InvalidOperationException">The Schedule is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Schedule.ReactivateImpl">
            <summary>
            Reactivates the Schedule
            </summary>
            <exception cref="T:System.InvalidOperationException">The Schedule is an invalid state for the Operation, e.g. it is already active.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Schedule.ScheduledProjects">
            <summary>
            Projects associated with this Schedule
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Schedule.IterationLength">
            <summary>
            The duration an iteration will last in this schedule.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Schedule.IterationGap">
            <summary>
            The duration between iterations in this schedule.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.SecondaryWorkitem">
            <summary>
            Represents the base of a Task or Test in the VersionOne System
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.SecondaryWorkitem.Parent">
            <summary>
            The story or defect this item belongs to.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Story">
            <summary>
            A story or backlog item
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Story.CloseImpl">
            <summary>
            Inactivates the Story
            </summary>
            <exception cref="T:System.InvalidOperationException">The Story is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Story.ReactivateImpl">
            <summary>
            Reactivates the Story
            </summary>
            <exception cref="T:System.InvalidOperationException">The Story is an invalid state for the Operation, e.g. it is already active.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Story.Breakdown">
            <summary>
            Breakdown this Story to Epic
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Story.CanBreakdown">
            <summary>
            Can Story be converted to Epic.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.RequestedBy">
            <summary>
            Name of person or organization requesting this Story.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.Build">
            <summary>
            Build number associated with this Story.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.Epic">
            <summary>
            The Epic that this Story belongs to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.Risk">
            <summary>
            This Story's Risk
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.Type">
            <summary>
            This Story's Type
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.Customer">
            <summary>
            Member assigned as a customer for this Story.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.DependsOnStories">
            <summary>
            Stories that this Story depends on.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.DependentStories">
            <summary>
            Stories that depend on this Story.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.IdentifiedIn">
            <summary>
            The (optional) Retrospective this Story was Identified in.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Story.Benefits">
            <summary>
            Benefits of the Story
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.StoryTemplate">
            <summary>
            A Story template
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.StoryTemplate.GenerateStory">
            <summary>
            Creates a Story from this Template, copying Attributes and Relationships
            </summary>
            <returns>A Story just like this Template</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.StubAssetID.Equals(System.Object)">
            <summary>
            Override Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.StubAssetID.GetHashCode">
            <summary>
            Override Equals
            </summary>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.StubAssetID.op_Equality(VersionOne.SDK.ObjectModel.StubAssetID,VersionOne.SDK.ObjectModel.StubAssetID)">
            <summary>
            Overload equal equal operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.StubAssetID.op_Inequality(VersionOne.SDK.ObjectModel.StubAssetID,VersionOne.SDK.ObjectModel.StubAssetID)">
            <summary>
            Overload not equal operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.EntityCollection`1.ReadOnlyGuardCondition">
            <summary>
            Throws if IsReadOnly
            </summary>
        </member>
        <member name="M:System.IO.StreamCopier.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copy the contents of the input stream to the output stream in chunks
            </summary>
            <param name="input"></param>
            <param name="output"></param>
        </member>
        <member name="M:System.IO.StreamCopier.CopyStream(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Copy the contents of the input stream to the output stream in chunks of buffersize
            </summary>
            <param name="input"></param>
            <param name="output"></param>
            <param name="buffersize"></param>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Task">
            <summary>
            Represents a Task in the VersionOne system
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Task.Build">
            <summary>
            Build number associated with this task.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Task.Source">
            <summary>
            The Source of this Task
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Task.Type">
            <summary>
            The Type of this Task
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Task.Status">
            <summary>
            The Status of this Task
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Task.RankOrder">
            <summary>
            This item's order.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Team">
            <summary>
            Represents a team in the VersionOne system
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.GetPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            The Stories and Defects assigned to this Team
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.GetIssues(VersionOne.SDK.ObjectModel.Filters.IssueFilter)">
            <summary>
            The Issues assigned to this Team
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.GetRetrospectives(VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter)">
            <summary>
            The Retrospectives assigned to this Team
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.GetEffortRecords(VersionOne.SDK.ObjectModel.Filters.EffortFilter)">
            <summary>
            Effort Records that belong to this Team
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.CloseImpl">
            <summary>
            Inactivates the Team
            </summary>
            <exception cref="T:System.InvalidOperationException">The Team is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.ReactivateImpl">
            <summary>
            Reactivates the Team
            </summary>
            <exception cref="T:System.InvalidOperationException">The Theme is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.GetTotalEstimate(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Return the total estimate for all stories and defects in this team optionally filtered
            </summary>
            <param name="filter">Criteria to filter stories and defects on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.GetTotalDone(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total done for all workitems in this team optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.GetTotalDetailEstimate(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total detail estimate for all workitems in this team optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Team.GetTotalToDo(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Return the total to do for all workitems in this team optionally filtered
            </summary>
            <param name="filter">Criteria to filter workitems on.</param>
            <returns></returns>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Test">
            <summary>
            Represents a Test in the VersionOne System
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Test.GetGeneratedRegressionTests">
            <summary>
            Get collection of Regression Tests generated from Test.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Test.GenerateRegressionTest">
            <summary>
            Generate Regression Test base on the current test.
            </summary>
            <returns>Generated Regression Test.</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Test.Type">
            <summary>
            The Type of this Test
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Test.Status">
            <summary>
            The Status of this Test
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Test.GeneratedFrom">
            <summary>
            Regression Test from with Test was generated.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Test.RankOrder">
            <summary>
            This item's order.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.TestSet">
            <summary>
            TestSet representation.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.TestSet.CopyAcceptanceTestsFromRegressionSuite">
            <summary>
            Copy tests from related Regression Suite.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.TestSet.RegressionSuite">
            <summary>
            Corresponding Regression Suite
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.TestSet.Environment">
            <summary>
            Environment for this Test Set
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.TestSet.CanCopyAcceptanceTestsFromRegressionSuite">
            <summary>
            Check whether acceptance tests can be copied from related Regression Suite
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.TestSuite">
            <summary>
            The TestSuite asset.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.TestSuite.GetProjects(VersionOne.SDK.ObjectModel.Filters.ProjectFilter)">
            <summary>
            Projects associated with this TestSuite.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.TestSuite.CloseImpl">
            <summary>
            Inactivates the TestSuite
            </summary>
            <exception cref="T:System.InvalidOperationException">The TestSuite is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.TestSuite.ReactivateImpl">
            <summary>
            Reactivates the TestSuite
            </summary>
            <exception cref="T:System.InvalidOperationException">The Theme is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.TestSuite.Reference">
            <summary>
            Reference is a free text field used for reference (perhaps to an external system).
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.Theme">
            <summary>
            Represents a Theme in the VersionOne system.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Theme.GetTotalDetailEstimate(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Gets the estimate of total effort required to implement this Feature Group.
            </summary>
            <param name="filter">filter for WorkitemFilter (If null, then all items returned).</param>
            <returns>estimate of total effort required to implement this Feature Group.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Theme.GetTotalToDo(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Gets the total remaining effort required to complete implementation of this Feature Group.
            </summary>
            <param name="filter">restriction for the work items which have to be counted. 
            If null, then all items counted.</param>
            <returns>total remaining effort required to complete implementation of this Feature Group.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Theme.GetPrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Stories and Defects assigned to this Theme.
            </summary>
            <param name="filter">Criteria to filter stories and defects on. Pass a DefectFilter or StoryFilter to get only Defects or Stories, respectively.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Theme.GetChildThemes(VersionOne.SDK.ObjectModel.Filters.ThemeFilter)">
            <summary>
            Child Themes of this Theme.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Theme.CloseImpl">
            <summary>
            Inactivates the Theme
            </summary>
            <exception cref="T:System.InvalidOperationException">The Theme is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Theme.ReactivateImpl">
            <summary>
            Reactivates the Theme
            </summary>
            <exception cref="T:System.InvalidOperationException">The Theme is an invalid state for the Operation, e.g. it is already closed.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Theme.CreateChildTheme(System.String)">
            <summary>
            Create a theme that is a child of this theme.
            </summary>
            <param name="name">Name of the new theme.</param>
            <returns>The new theme.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.Theme.CreateChildTheme(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a theme that is a child of this theme.
            </summary>
            <param name="name">Name of the new theme.</param>
            <param name="attributes">required attributes</param>
            <returns>The new theme.</returns>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Owners">
            <summary>
            Members that pwn this item.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Risk">
            <summary>
            This Theme's Risk
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Priority">
            <summary>
            This Theme's Priority
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Source">
            <summary>
            This Theme's Source
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Type">
            <summary>
            This Theme's Type
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Status">
            <summary>
            This Theme's Status
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.ParentTheme">
            <summary>
            The Theme this Theme is assigned to.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Customer">
            <summary>
            Member assigned as a customer for this Theme.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Build">
            <summary>
            Build number associated with this Theme.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Estimate">
            <summary>
            High-level estimate of this Theme.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.Theme.Goals">
            <summary>
            Goals this Theme is assigned to.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.V1Instance">
            <summary>
            Provides access to a single instance of a VersionOne application. This is the starting point 
            for any application.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.#ctor(System.String)">
            <summary>
            Initialize a V1Instance to communicate with an installation of VersionOne at a given URL using Integrated Authentication.
            </summary>
            <param name="applicationPath">Location of the VersionOne application. Ex: http://server/versionone/</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize a V1Instance to communicate with an installation of VersionOne at a given URL using basic authentication.
            </summary>
            <param name="applicationPath">Location of the VersionOne application. Ex: http://server/versionone/</param>
            <param name="username">VersionOne member's username to authenticate with</param>
            <param name="password">VersioonOne member's password to authenticate with</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initialize a V1Instance to communicate with an installation of VersionOne at a given URL.
            </summary>
            <param name="applicationPath">Location of the VersionOne application. Ex: http://server/versionone/</param>
            <param name="username">VersionOne member's username to authenticate with.  If using Integrated Authentication, must be in "user@domain" format.</param>
            <param name="password">VersioonOne member's password to authenticate with</param>
            <param name="integratedAuth">True to use Integrated Authentication</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.#ctor(System.String,System.String,System.String,System.Boolean,VersionOne.SDK.ObjectModel.ProxySettings)">
            <summary>
            Initialize a V1Instance to communicate with an installation of VersionOne through a Proxy connection
            </summary>
            <param name="applicationPath">Location of the VersionOne application. Ex: http://server/versionone/</param>
            <param name="username">VersionOne member's username to authenticate with.  If using Integrated Authentication, must be in "user@domain" format.</param>
            <param name="password">VersioonOne member's password to authenticate with</param>
            <param name="integratedAuth">True to use Integrated Authentication</param>
            <param name="proxySettings">Proxy server settings. Here you can provide proxy path and credentials, if required.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.Validate">
            <summary>
            Validate the application path, username, and password used to construct this instance
            </summary>
            <exception cref="T:VersionOne.SDK.ObjectModel.ApplicationUnavailableException">The application path is unavailable or invalid.</exception>
            <exception cref="T:VersionOne.SDK.ObjectModel.AuthenticationException">The supplied username or password was invalid.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.ExecuteOperation``1(VersionOne.SDK.ObjectModel.Entity,System.String)">
            <summary>
            Executes an Operation on an Entity, assuming it is safe to do so.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="subject"></param>
            <param name="operationName"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">If the Operation fails</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.ExecuteOperation(VersionOne.SDK.ObjectModel.Entity,System.String)">
            Be sure to call Entity.Save() before or after calling this depending on the operation result
            <exception cref="T:System.InvalidOperationException">If the Operation fails</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetAsset(VersionOne.SDK.ObjectModel.Entity)">
            <summary>
            Find an asset in the asset cache or create one for this entity
            </summary>
            <param name="entity"></param>
            <returns>An asset that will exist in the asset cache</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetAsset(System.Object,System.String)">
            <summary>
            Find an asset in the asset cache or create one for this id
            </summary>
            <param name="id"></param>
            <param name="assetTypeToken">The Asset Type Token of the asset to create if one does not already exist</param>
            <returns>An Asset that will exist in the asset cache</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetAsset(System.Object)">
            <summary>
            Retrieve an asset stored in asset cache
            </summary>
            <param name="id"></param>
            <returns>an Asset or null if the asset cannot be found in the cache</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.ClearCache(VersionOne.SDK.ObjectModel.Entity,System.String)">
            <summary>
            Clear an property from cache of specified Entity.
            </summary>
            <param name="entity">to clear property of.</param>
            <param name="name">of the property to clear;
            if null, all properties will be cleared from cache.</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.PreventTrackingLevelAbuse(VersionOne.SDK.ObjectModel.Workitem)">
            <summary>
            Call this before setting Detail Estimate or TODO on a workitem
            </summary>
            <param name="workitem"></param>
            <exception cref="T:System.InvalidOperationException">If setting DetailEstimate is not allowed at this level.</exception>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.MetaModel">
            <summary>
            The underlying MetaModel provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Loc">
            <summary>
            The underlying localizer provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Services">
            <summary>
            The underlying Services provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Attachments">
            <summary>
            The underlying Attachments provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.V1Config">
            <summary>
            The underlying V1Config provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Configuration">
            <summary>
            Contains configuration settings for the VersionOne application instance
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.LoggedInMember">
            <summary>
            Returns the currently logged in member
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Projects">
            <summary>
            Returns a read-only collection of root level Project entities
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Members">
            <summary>
            Returns a read-only collection of enumerable of Member entities
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Teams">
            <summary>
            Returns a read-only collection of Team entities
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.TestSuites">
            <summary>
            Returns a read-only collection of TestSuites
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.ApiClient">
            <summary>
            Allows access to the underlying API Client structures. Only use this when you need access that
            this library does not provide.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.CustomHttpHeaders">
            <summary>
            Headers from this Dictionary will be added to all HTTP requests to VersionOne server.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.ValidationEnabled">
            <summary>
            Get/set validation state. If enabled, required fields are validated on entity creation, save and operation execution.
            If entities are invalid, <see cref="T:VersionOne.SDK.ObjectModel.EntityValidationException"/> is thrown.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Create">
            <summary>
            Create various assets in the system
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.Get">
            <summary>
            Get various assets in the system
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.V1Instance.ApiClientInternals">
            <summary>
            Allows access to the underlying API Client structures.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.ApiClientInternals.MetaModel">
            <summary>
            The underlying MetaModel provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.ApiClientInternals.Localizer">
            <summary>
            The underlying localizer provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.ApiClientInternals.Services">
            <summary>
            The underlying Services provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.ApiClientInternals.Attachments">
            <summary>
            The underlying Attachments provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.ApiClientInternals.V1Config">
            <summary>
            The underlying V1Config provided by the API Client.
            </summary>
        </member>
        <member name="P:VersionOne.SDK.ObjectModel.V1Instance.ApiClientInternals.CustomHttpHeaders">
            <summary>
            Headers from this Dictionary will be added to all HTTP requests to VersionOne server.
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.V1Instance.InstanceConfiguration">
            <summary>
            Represents configuration data of a VersionOne Instance
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.V1Instance.InstanceConfiguration.EffortTrackingEnabled">
            <summary>
            If Effort Tracking is enabled (Effort Records can be created and Saved)
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.V1Instance.InstanceConfiguration.StoryTrackingLevel">
            <summary>
            The level at which DetailEstimate, ToDo and Effort are tracked for Stories
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.V1Instance.InstanceConfiguration.DefectTrackingLevel">
            <summary>
            The level at which DetailEstimate, ToDo and Effort are tracked for Defects
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.V1Instance.InstanceConfiguration.MaximumAttachmentSize">
            <summary>
            The maximum size of an attachment the instance will accept before returning an error
            </summary>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods">
            <summary>
            Create Assets
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Schedule(System.String,VersionOne.SDK.APIClient.Duration,VersionOne.SDK.APIClient.Duration)">
            <summary>
            Create a new schedule entity with a name, iteration length, and iteration gap
            </summary>
            <param name="name">Name of the new schedule</param>
            <param name="iterationLength">The duration an iteration will last in this schedule</param>
            <param name="iterationGap">The duration between iterations in this schedule.</param>
            <returns>A newly minted Schedule that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Schedule(System.String,VersionOne.SDK.APIClient.Duration,VersionOne.SDK.APIClient.Duration,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new schedule entity with required attributes.
            </summary>
            <param name="name">Name of the new schedule</param>
            <param name="iterationLength">The duration an iteration will last in this schedule</param>
            <param name="iterationGap">The duration between iterations in this schedule.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Schedule that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Project(System.String,VersionOne.SDK.ObjectModel.Project,System.DateTime,VersionOne.SDK.ObjectModel.Schedule)">
            <summary>
            Create a new project entity with a name, parent project, begin date, and optional schedule
            </summary>
            <param name="name"></param>
            <param name="parentProject"></param>
            <param name="beginDate"></param>
            <param name="schedule"></param>
            <returns>A newly minted Project that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Project(System.String,VersionOne.SDK.ObjectModel.Project,System.DateTime,VersionOne.SDK.ObjectModel.Schedule,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new project entity with a name, parent project, begin date, and optional schedule
            </summary>
            <param name="name"></param>
            <param name="parentProject"></param>
            <param name="beginDate"></param>
            <param name="schedule"></param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Project that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Project(System.String,VersionOne.SDK.ObjectModel.AssetID,System.DateTime,VersionOne.SDK.ObjectModel.Schedule)">
            <summary>
            Create a new project entity with a name, parent project, begin date, and optional schedule
            </summary>
            <param name="name"></param>
            <param name="parentProjectID"></param>
            <param name="beginDate"></param>
            <param name="schedule"></param>
            <returns>A newly minted Project that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Project(System.String,VersionOne.SDK.ObjectModel.AssetID,System.DateTime,VersionOne.SDK.ObjectModel.Schedule,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new project entity with a name, parent project, begin date, and optional schedule
            </summary>
            <param name="name"></param>
            <param name="parentProjectID"></param>
            <param name="beginDate"></param>
            <param name="schedule"></param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Project that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Member(System.String,System.String,VersionOne.SDK.ObjectModel.Role)">
            <summary>
            Create a new member entity with a name, short name, and default role
            </summary>
            <param name="name">The full name of the user.</param>
            <param name="shortName">An alias or nickname used throughout the VersionOne user interface.</param>
            <param name="defaultRole">The new user's default role on projects.</param>
            <returns>A newly minted Member that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Member(System.String,System.String,VersionOne.SDK.ObjectModel.Role,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new member entity with a name, short name, and default role
            </summary>
            <param name="name">The full name of the user.</param>
            <param name="shortName">An alias or nickname used throughout the VersionOne user interface.</param>
            <param name="defaultRole">The new user's default role on projects.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Member that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Member(System.String,System.String)">
            <summary>
            Create a new member entity with a name and short name
            </summary>
            <param name="name">The full name of the user.</param>
            <param name="shortName">An alias or nickname used throughout the VersionOne user interface.</param>
            <returns>A newly minted Member that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Member(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new member entity with a name and short name
            </summary>
            <param name="name">The full name of the user.</param>
            <param name="shortName">An alias or nickname used throughout the VersionOne user interface.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Member that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Team(System.String)">
            <summary>
            Create a new team entity with a name
            </summary>
            <param name="name"></param>
            <returns>A newly minted Team that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Team(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new team entity with a name
            </summary>
            <param name="name"></param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Team that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Story(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new Story with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Story will be in.</param>
            <returns>A newly minted Story that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Story(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Story with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Story will be in.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Story that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Story(System.String,VersionOne.SDK.ObjectModel.Retrospective)">
            <summary>
            Create a new story with a name. Set the story's IdentifiedIn to the given retrospective and the project to the retrospective's project.
            </summary>
            <param name="name">The initial name of the story.</param>
            <param name="retrospective">The retrospective this story was identified in.</param>
            <returns>A newly minted Story that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Story(System.String,VersionOne.SDK.ObjectModel.Retrospective,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new story with a name. Set the story's IdentifiedIn to the given retrospective and the project to the retrospective's project.
            </summary>
            <param name="name">The initial name of the story.</param>
            <param name="retrospective">The retrospective this story was identified in.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Story that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Defect(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new Defect with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Defect will be in.</param>
            <returns>A newly minted Defect that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Defect(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Defect with required attributes.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Defect will be in.</param>
            <param name="attributes">Required attributes.</param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Task(System.String,VersionOne.SDK.ObjectModel.PrimaryWorkitem)">
            <summary>
            Create a new Task with a name. Assign it to the given primary workitem.
            </summary>
            <param name="name">The initial name of the task.</param>
            <param name="primaryWorkitem">The PrimaryWorkitem this Task will belong to.</param>
            <returns>A newly minted Task that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Task(System.String,VersionOne.SDK.ObjectModel.PrimaryWorkitem,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Task with required attributes. Assign it to the given primary workitem.
            </summary>
            <param name="name">The initial name of the task.</param>
            <param name="primaryWorkitem">The PrimaryWorkitem this Task will belong to.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Task that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Test(System.String,VersionOne.SDK.ObjectModel.PrimaryWorkitem)">
            <summary>
            Create a new Test with a name. Assign it to the given primary workitem.
            </summary>
            <param name="name">The initial name of the test.</param>
            <param name="primaryWorkitem">The PrimaryWorkitem this Test will belong to.</param>
            <returns>A newly minted Test that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Test(System.String,VersionOne.SDK.ObjectModel.PrimaryWorkitem,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Test with required attributes. Assign it to the given primary workitem.
            </summary>
            <param name="name">The initial name of the test.</param>
            <param name="primaryWorkitem">The PrimaryWorkitem this Test will belong to.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Test that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Theme(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new Theme with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Theme will be in.</param>
            <returns>A newly minted Theme that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Theme(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Theme with required attributes.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Theme will be in.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Theme that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Goal(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new Goal with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Goal will be in.</param>
            <returns>A newly minted Goal that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Goal(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Goal with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Goal will be in.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Goal that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Issue(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new Issue with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Issue will be in.</param>
            <returns>A newly minted Issue that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Issue(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Issue with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Issue will be in.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Issue that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Issue(System.String,VersionOne.SDK.ObjectModel.Retrospective)">
            <summary>
            Creates an Issue related to a Retrospective
            </summary>
            <param name="name">The name of the Issue</param>
            <param name="retrospective">The Retrospective to relate the Issue to</param>
            <returns>The newly saved Issue</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Issue(System.String,VersionOne.SDK.ObjectModel.Retrospective,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates an Issue related to a Retrospective
            </summary>
            <param name="name">The name of the Issue</param>
            <param name="retrospective">The Retrospective to relate the Issue to</param>
            <param name="attributes">Required attributes.</param>
            <returns>The newly saved Issue</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Request(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new Request with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Request will be in.</param>
            <returns>A newly minted Request that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Request(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Request with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Request will be in.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Request that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Epic(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new Epic with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Epic will be in.</param>
            <returns>A newly minted Epic that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Epic(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new Epic with a name.
            </summary>
            <param name="name">The initial name of the entity.</param>
            <param name="project">The Project this Epic will be in.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Epic that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Link(System.String,VersionOne.SDK.ObjectModel.BaseAsset,System.String,System.Boolean)">
            <summary>
            Create a new link with a name
            </summary>
            <param name="name">The initial name of the link</param>
            <param name="asset">The asset this link belongs to</param>
            <param name="url">The URL of the link</param>
            <param name="onMenu">True to show on the asset's detail page menu</param>
            <returns>A newly minted Link that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Link(System.String,VersionOne.SDK.ObjectModel.BaseAsset,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new link with a name
            </summary>
            <param name="name">The initial name of the link</param>
            <param name="asset">The asset this link belongs to</param>
            <param name="url">The URL of the link</param>
            <param name="onMenu">True to show on the asset's detail page menu</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Link that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Note(System.String,VersionOne.SDK.ObjectModel.BaseAsset,System.String,System.Boolean)">
            <summary>
            Create a new n0te with a name, asset, content, and 'personal' flag 
            </summary>
            <param name="name">The initial name of the n0te</param>
            <param name="asset">The asset this n0te belongs to</param>
            <param name="content">The content of the n0te</param>
            <param name="personal">True if this n0te is only visible to </param>
            <returns>A newly minted n0te that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Note(System.String,VersionOne.SDK.ObjectModel.BaseAsset,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new n0te with a name, asset, content, and 'personal' flag 
            </summary>
            <param name="name">The initial name of the n0te</param>
            <param name="asset">The asset this n0te belongs to</param>
            <param name="content">The content of the n0te</param>
            <param name="personal">True if this n0te is only visible to </param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted n0te that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Note(VersionOne.SDK.ObjectModel.Note,System.String,System.String,System.Boolean)">
            <summary>
            Create a new response to an existing n0te with a name, content, and 'personal' flag 
            </summary>
            <param name="responseTo">The n0te to respond to</param>
            <param name="name">The initial name of the n0te</param>
            <param name="content">The content of the n0te</param>
            <param name="personal">True if this n0te is only visible to </param>
            <returns>A newly minted n0te in response to the original one that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Note(VersionOne.SDK.ObjectModel.Note,System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new response to an existing n0te with a name, content, and 'personal' flag 
            </summary>
            <param name="responseTo">The n0te to respond to</param>
            <param name="name">The initial name of the n0te</param>
            <param name="content">The content of the n0te</param>
            <param name="personal">True if this n0te is only visible to </param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted n0te in response to the original one that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.TestSuite(System.String,System.String)">
            <summary>
            Create a new TestSuite with a name
            </summary>
            <param name="name">The initial name of the TestSuite</param>
            <returns>A newly minted TestSuite that exists in the VersionOne system.</returns>
            <param name="reference">A free text field used for reference (perhaps to an external system)</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.TestSuite(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new TestSuite with a name
            </summary>
            <param name="name">The initial name of the TestSuite</param>
            <returns>A newly minted TestSuite that exists in the VersionOne system.</returns>
            <param name="attributes">Required attributes.</param>
            <param name="reference">A free text field used for reference (perhaps to an external system)</param>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Attachment(System.String,VersionOne.SDK.ObjectModel.BaseAsset,System.String,System.IO.Stream)">
            <summary>
            Create a new attachment with a name
            </summary>
            <param name="name">The name of the attachment</param>
            <param name="asset">The asset this attachment belongs to</param>
            <param name="filename">The name of the original attachment file</param>
            <param name="stream">The read-enabled stream that contains the attachment content to upload</param>
            <returns>A newly minted Attachment that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Attachment(System.String,VersionOne.SDK.ObjectModel.BaseAsset,System.String,System.IO.Stream,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new attachment with a name
            </summary>
            <param name="name">The name of the attachment</param>
            <param name="asset">The asset this attachment belongs to</param>
            <param name="filename">The name of the original attachment file</param>
            <param name="stream">The read-enabled stream that contains the attachment content to upload</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Attachment that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Retrospective(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new retrospective with a name
            </summary>
            <param name="name">The name of the retrospective</param>
            <param name="project">The project this retrospective belongs to</param>
            <returns>A newly minted Retrospective that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Retrospective(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new retrospective with a name
            </summary>
            <param name="name">The name of the retrospective</param>
            <param name="project">The project this retrospective belongs to</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Retrospective that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Iteration(VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create a new iteration using suggested system values.
            </summary>
            <param name="project">The project to use to determine the schedule this iteration belongs to.</param>
            <returns>A newly minted Iteration that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Iteration(VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new iteration using suggested system values.
            </summary>
            <param name="project">The project to use to determine the schedule this iteration belongs to.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Iteration that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Iteration(System.String,VersionOne.SDK.ObjectModel.Schedule,System.DateTime,System.DateTime)">
            <summary>
            Create a new iteration with a name, begin date, and end date
            </summary>
            <param name="name">The name of the iteration</param>
            <param name="schedule">The schedule this iteration belongs to</param>
            <param name="beginDate">The begin date or start date of this iteration</param>
            <param name="endDate">The end date of this iteration</param>
            <returns>A newly minted Iteration that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Iteration(System.String,VersionOne.SDK.ObjectModel.Schedule,System.DateTime,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new iteration with a name, begin date, and end date
            </summary>
            <param name="name">The name of the iteration</param>
            <param name="schedule">The schedule this iteration belongs to</param>
            <param name="beginDate">The begin date or start date of this iteration</param>
            <param name="endDate">The end date of this iteration</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Iteration that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Effort(System.Double,VersionOne.SDK.ObjectModel.Workitem,VersionOne.SDK.ObjectModel.Member,System.DateTime)">
            <summary>
            Create a new effort record with a value and date, assigned to the given workitem and member
            </summary>
            <param name="value">The value of the effort record</param>
            <param name="item">The workitem to assign the effort record to</param>
            <param name="member">The member to assign the effort record to</param>
            <param name="date">The date to log the effort record against</param>
            <returns>A newly minted Effort Record that exists in the VersionOne system.</returns>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Effort(System.Double,VersionOne.SDK.ObjectModel.Workitem,VersionOne.SDK.ObjectModel.Member,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new effort record with a value and date, assigned to the given workitem and member
            </summary>
            <param name="value">The value of the effort record</param>
            <param name="item">The workitem to assign the effort record to</param>
            <param name="member">The member to assign the effort record to</param>
            <param name="date">The date to log the effort record against</param>
            <returns>A newly minted Effort Record that exists in the VersionOne system.</returns>
            <param name="attributes">Required attributes.</param>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Effort(System.Double,VersionOne.SDK.ObjectModel.Workitem)">
            <summary>
            Create a new effort record for the currently logged in member.
            </summary>
            <param name="value">The value of the effort record</param>
            <param name="item">The workitem to assign the effort record to</param>
            <returns>A newly minted Effort Record that exists in the VersionOne system.</returns>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Effort(System.Double,VersionOne.SDK.ObjectModel.Workitem,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create a new effort record for the currently logged in member.
            </summary>
            <param name="value">The value of the effort record</param>
            <param name="item">The workitem to assign the effort record to</param>
            <returns>A newly minted Effort Record that exists in the VersionOne system.</returns>
            <param name="attributes">Required attributes.</param>
            <exception cref="T:System.InvalidOperationException">Effort Tracking is not enabled.</exception>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.BuildProject(System.String,System.String)">
            <summary>
             Create a new Build Project with a name and reference
            </summary>
            <param name="name">Initial name.</param>
            <param name="reference">Reference value.</param>
            <returns>A newly minted Build Project that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.BuildProject(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create a new Build Project with a name and reference
            </summary>
            <param name="name">Initial name.</param>
            <param name="reference">Reference value.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Build Project that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.BuildRun(VersionOne.SDK.ObjectModel.BuildProject,System.String,System.DateTime)">
            <summary>
             Create a new Build Run in the given Build Project with a name and date
            </summary>
            <param name="buildProject"></param>
            <param name="name"></param>
            <param name="date"></param>
            <returns>A newly minted Build Run that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.BuildRun(VersionOne.SDK.ObjectModel.BuildProject,System.String,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create a new Build Run in the given Build Project with a name and date
            </summary>
            <param name="buildProject"></param>
            <param name="name"></param>
            <param name="date"></param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Build Run that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.ChangeSet(System.String,System.String)">
            <summary>
             Create a new ChangeSet with a name and reference
            </summary>
            <param name="name">Initial name.</param>
            <param name="reference">Reference value.</param>
            <returns>A newly minted ChangeSet that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.ChangeSet(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create a new ChangeSet with a name and reference
            </summary>
            <param name="name">Initial name.</param>
            <param name="reference">Reference value.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted ChangeSet that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Message(System.String,System.String)">
            <summary>
             Create a new Message with a subject and recipient.
            </summary>
            <param name="subject">Message subject.</param>
            <param name="messageBody">Message body.</param>
            <returns>A newly minted Message that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Message(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create a new Message with a subject and recipient.
            </summary>
            <param name="subject">Message subject.</param>
            <param name="messageBody">Message body.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Message that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Message(System.String,System.String,VersionOne.SDK.ObjectModel.Member)">
            <summary>
             Create a new Message with a subject and recipient.
            </summary>
            <param name="subject">Message subject.</param>
            <param name="messageBody">Message body.</param>
            <param name="recipient">Who this message will go to.</param>
            <returns>A newly minted Message that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Message(System.String,System.String,VersionOne.SDK.ObjectModel.Member,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create a new Message with a subject and recipient.
            </summary>
            <param name="subject">Message subject.</param>
            <param name="messageBody">Message body.</param>
            <param name="recipient">Who this message will go to.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Message that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Message(System.String,System.String,System.Collections.Generic.ICollection{VersionOne.SDK.ObjectModel.Member})">
            <summary>
             Create a new Message with a subject and recipient.
            </summary>
            <param name="subject">Message subject.</param>
            <param name="messageBody">Message body.</param>
            <param name="recipients">Who this message will go to. May be null.</param>
            <returns>A newly minted Message that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Message(System.String,System.String,System.Collections.Generic.ICollection{VersionOne.SDK.ObjectModel.Member},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create a new Message with a subject and recipient.
            </summary>
            <param name="subject">Message subject.</param>
            <param name="messageBody">Message body.</param>
            <param name="recipients">Who this message will go to. May be null.</param>
            <param name="attributes">Required attributes.</param>
            <returns>A newly minted Message that exists in the VersionOne system.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.RegressionPlan(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create a new Regression Plan with title and project
            </summary>
            <param name="name">Title of the plan</param>
            <param name="project">Project to assign</param>
            <param name="attributes">Additional attributes for initialization Regression Plan.</param>
            <returns>Regression Plan</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.RegressionPlan(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
             Create a new Regression Plan with title and project
            </summary>
            <param name="name">Title of the plan</param>
            <param name="project">Project to assign</param>
            <returns>Regression Plan</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.RegressionSuite(System.String,VersionOne.SDK.ObjectModel.RegressionPlan)">
            <summary>
            Create a new Regression Suite with title and Regression Plan
            </summary>
            <param name="name">Title of the suite</param>
            <param name="regressionPlan">Regression Plan to assign</param>
            <returns>Regression Suite</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.RegressionSuite(System.String,VersionOne.SDK.ObjectModel.RegressionPlan,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Create a new Regression Suite with title and Regression Plan
            </summary>
            <param name="name">Title of the suite</param>
            <param name="regressionPlan">Regression Plan to assign</param>
            <param name="attributes">Additional attributes for initialization of Regression Suite.</param>
            <returns>Regression Suite</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.TestSet(System.String,VersionOne.SDK.ObjectModel.RegressionSuite,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create new Test Set
            </summary>
            <param name="name">Test Set name</param>
            <param name="suite">Parent RegressionSuite</param>
            <param name="project">Parent Project</param>
            <param name="attributes">Additional attributes that should be set in order to be able to save when there is validation</param>
            <returns>Newly created Test Set</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.TestSet(System.String,VersionOne.SDK.ObjectModel.RegressionSuite,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create new Test Set
            </summary>
            <param name="name">Test Set name</param>
            <param name="suite">Parent RegressionSuite</param>
            <param name="project">Parent Project</param>
            <returns>Newly created Test Set</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Environment(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create new Environment.
            </summary>
            <param name="name">Environment name</param>
            <param name="project">Parent Project</param>
            <returns>Newly created Environment</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Environment(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create new Environment.
            </summary>
            <param name="name">Environment name</param>
            <param name="project">Parent Project</param>
            <param name="attributes">Additional attributes that should be set for Environment</param>
            <returns>Newly created Environment</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.RegressionTest(System.String,VersionOne.SDK.ObjectModel.Project)">
            <summary>
            Create new Regression Test.
            </summary>
            <param name="name">Regression Test name</param>
            <param name="scope">Regression Test project</param>
            <returns>Newly created Regression Test</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.RegressionTest(System.String,VersionOne.SDK.ObjectModel.Project,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create new Regression Test.
            </summary>
            <param name="name">Regression Test name</param>
            <param name="scope">Regression Test project</param>
            <param name="attributes">Additional attributes that should be set for Environment</param>
            <returns>Newly created Regression Test</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.RegressionTest(VersionOne.SDK.ObjectModel.Test)">
            <summary>
            Create new Regression Test based on Test
            </summary>
            <param name="test">Test which we will be used to create Regression Test</param>
            <returns>Newly created Regression Test</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Conversation(System.String)">
            <summary>
            Add new Conversation with author as current logged user.
            </summary>
            <param name="content">Content of Conversation.</param>
            <returns>Newly created Conversation.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Conversation(VersionOne.SDK.ObjectModel.Member,System.String)">
            <summary>
            Add new Conversation.
            </summary>
            <param name="author">Author of Conversation.</param>
            <param name="content">Content of Conversation.</param>
            <returns>Newly created Conversation.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.Conversation(VersionOne.SDK.ObjectModel.Member,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Add new Conversation.
            </summary>
            <param name="author">Author of Conversation.</param>
            <param name="content">Content of Conversation.</param>
            <param name="attributes">Additional attributes that should be set for Conversation</param>
            <returns>Newly created Conversation.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.CreateMethods.AddAttributes(VersionOne.SDK.ObjectModel.Entity,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Fills required attributes
            </summary>
            <param name="entity">entity for filling</param>
            <param name="attributes">Required attributes.</param>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.V1Instance.GetMethods">
            <summary>
            Methods to get things
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Attachments(VersionOne.SDK.ObjectModel.Filters.AttachmentFilter)">
            <summary>
            Get attachments filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Notes(VersionOne.SDK.ObjectModel.Filters.NoteFilter)">
            <summary>
            Get notes filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Links(VersionOne.SDK.ObjectModel.Filters.LinkFilter)">
            <summary>
            Get links filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.EffortRecords(VersionOne.SDK.ObjectModel.Filters.EffortFilter)">
            <summary>
            Get effort records filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.BaseAssets(VersionOne.SDK.ObjectModel.Filters.BaseAssetFilter)">
            <summary>
            Get assets filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Stories(VersionOne.SDK.ObjectModel.Filters.StoryFilter)">
            <summary>
            Get stories filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Epics(VersionOne.SDK.ObjectModel.Filters.EpicFilter)">
            <summary>
            Get Epics filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Defects(VersionOne.SDK.ObjectModel.Filters.DefectFilter)">
            <summary>
            Get defects filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.PrimaryWorkitems(VersionOne.SDK.ObjectModel.Filters.PrimaryWorkitemFilter)">
            <summary>
            Get primary workitems (stories and defects) filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Workitems(VersionOne.SDK.ObjectModel.Filters.WorkitemFilter)">
            <summary>
            Get workitems (stories, defects, tasks, and tests) filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.SecondaryWorkitems(VersionOne.SDK.ObjectModel.Filters.SecondaryWorkitemFilter)">
            <summary>
            Get secondary workitems (tasks and tests) filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Tasks(VersionOne.SDK.ObjectModel.Filters.TaskFilter)">
            <summary>
            Get tasks filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Tests(VersionOne.SDK.ObjectModel.Filters.TestFilter)">
            <summary>
            Get Tests filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Iterations(VersionOne.SDK.ObjectModel.Filters.IterationFilter)">
            <summary>
            Get iterations filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Projects(VersionOne.SDK.ObjectModel.Filters.ProjectFilter)">
            <summary>
            Get projects filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RegressionPlans(VersionOne.SDK.ObjectModel.Filters.RegressionPlanFilter)">
            <summary>
            Get regression plans filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items are returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RegressionSuites(VersionOne.SDK.ObjectModel.Filters.RegressionSuiteFilter)">
            <summary>
            Get Regression Suite filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items are returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RegressionTests(VersionOne.SDK.ObjectModel.Filters.RegressionTestFilter)">
            <summary>
            Get Regression Tests filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items are returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.TestSets(VersionOne.SDK.ObjectModel.Filters.TestSetFilter)">
            <summary>
            Get Test Sets filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items are returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Environments(VersionOne.SDK.ObjectModel.Filters.EnvironmentFilter)">
            <summary>
            Get Environment filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Schedules(VersionOne.SDK.ObjectModel.Filters.ScheduleFilter)">
            <summary>
            Get schedules filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Teams(VersionOne.SDK.ObjectModel.Filters.TeamFilter)">
            <summary>
            Get teams filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Themes(VersionOne.SDK.ObjectModel.Filters.ThemeFilter)">
            <summary>
            Get themes filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Members(VersionOne.SDK.ObjectModel.Filters.MemberFilter)">
            <summary>
            Get Members filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Requests(VersionOne.SDK.ObjectModel.Filters.RequestFilter)">
            <summary>
            Get Requests filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Goals(VersionOne.SDK.ObjectModel.Filters.GoalFilter)">
            <summary>
            Get Goals filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Issues(VersionOne.SDK.ObjectModel.Filters.IssueFilter)">
            <summary>
            Get Issues filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Retrospectives(VersionOne.SDK.ObjectModel.Filters.RetrospectiveFilter)">
            <summary>
            Get Retrospective filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.BuildRuns(VersionOne.SDK.ObjectModel.Filters.BuildRunFilter)">
            <summary>
            Get Build Runs filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.BuildProjects(VersionOne.SDK.ObjectModel.Filters.BuildProjectFilter)">
            <summary>
            Get Build Projects filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ChangeSets(VersionOne.SDK.ObjectModel.Filters.ChangeSetFilter)">
            <summary>
            Get ChangeSets filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Messages(VersionOne.SDK.ObjectModel.Filters.MessageFilter)">
            <summary>
            Get Messages filtered by the criteria specified in the passed in filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.Conversations(VersionOne.SDK.ObjectModel.Filters.ConversationFilter)">
            <summary>
            Get Conversation/Expression filtered by the criteria specified in the passed filter.
            </summary>
            <param name="filter">Limit the items returned. If null, then all items returned.</param>
            <returns>ICollection of the items as specified in the filter.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.TrackedEpics(System.Collections.Generic.ICollection{VersionOne.SDK.ObjectModel.Project})">
            <summary>
            Get tracked Epics for enlisted Projects.
            </summary>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ProjectByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a project with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the project to retrieve</param>
            <returns>an instance of a Project or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ScheduleByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a schedule with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the schedule to retrieve</param>
            <returns>an instance of a Schedule or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.IterationByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns an iteration with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the iteration to retrieve</param>
            <returns>an instance of an Iteration or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RetrospectiveByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a retrospective with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the iteration to retrieve</param>
            <returns>an instance of a retrospective or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.MemberByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Member with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Member to retrieve</param>
            <returns>an instance of a Member or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.TeamByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Team with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Team to retrieve</param>
            <returns>an instance of a Team or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.StoryByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Story with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Story to retrieve</param>
            <returns>an instance of a story or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.DefectByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Defect with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Defect to retrieve</param>
            <returns>an instance of a Defect or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.IssueByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns an Issue with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Issue to retrieve</param>
            <returns>an instance of a Issue or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RequestByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Request with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Request to retrieve</param>
            <returns>an instance of a Request or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ThemeByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Theme with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Theme to retrieve</param>
            <returns>an instance of a Theme or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.GoalByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Goal with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Goal to retrieve</param>
            <returns>an instance of a Goal or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.EpicByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Epic with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Epic to retrieve</param>
            <returns>an instance of a Epic or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.StoryTemplateByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a StoryTemplate with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the StoryTemplate to retrieve</param>
            <returns>an instance of a StoryTemplate or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.DefectTemplateByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a DefectTemplate with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the DefectTemplate to retrieve</param>
            <returns>an instance of a DefectTemplate or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.NoteByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Note with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Note to retrieve</param>
            <returns>an instance of a Note or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.LinkByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Link with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Link to retrieve</param>
            <returns>an instance of a Link or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.AttachmentByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns an Attachment with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Attachment to retrieve</param>
            <returns>an instance of an Attachment or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.TestSuiteByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a TestSuite with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the TestSuite to retrieve</param>
            <returns>an instance of a TestSuite or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.EffortByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns an Effort Record with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Effort Record to retrieve</param>
            <returns>an instance of an Effort Record or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.PrimaryWorkitemByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Primary Workitem with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Primary Workitem to retrieve</param>
            <returns>an instance of a Primary Workitem or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.SecondaryWorkitemByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Secondary Workitem with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Secondary Workitem to retrieve</param>
            <returns>an instance of a Secondary Workitem or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.WorkitemByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Workitem with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Workitem to retrieve</param>
            <returns>an instance of a Workitem or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.BaseAssetByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a BaseAsset with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the BaseAsset to retrieve</param>
            <returns>an instance of a BaseAsset or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.BuildRunByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Build Run with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Build Run to retrieve</param>
            <returns>an instance of a Build Run or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.BuildProjectByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Build Project with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Build Project to retrieve</param>
            <returns>an instance of a Build Project or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ChangeSetByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a ChangeSet with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the ChangeSet to retrieve</param>
            <returns>an instance of a ChangeSet or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RegressionPlanByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a RegressionPlan with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the RegressionPlan to retrieve</param>
            <returns>an instance of a RegressionPlan or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RegressionSuiteByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Regression Suite with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Regression Suite to retrieve</param>
            <returns>an instance of a Regression Suite or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RegressionTestByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Regression Test with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Regression Test to retrieve</param>
            <returns>an instance of a Regression Test or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.TestSetByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Test Set with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Test Set to retrieve</param>
            <returns>an instance of a Test Set or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.EnvironmentByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Environment with the given ID or null if the ID is invalid
            </summary>
            <param name="id">ID of the Environment to retrieve</param>
            <returns>an instance of a Environment or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ConversationByID(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns a Conversation with the given ID or null if the ID is invalid.
            </summary>
            <param name="id">ID of the Conversation to retrieve.</param>
            <returns>an instance of an Conversation or null if ID is invalid.</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.GetByID``1(VersionOne.SDK.ObjectModel.AssetID)">
            <summary>
            Returns an Entity of Type T with the given ID or null if the ID is invalid
            </summary>
            <typeparam name="T">Entity Type to retrieve</typeparam>
            <param name="id">ID of the Entity to retrieve</param>
            <returns>an instance of an Entity of Type T or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.GetByDisplayID``1(System.String)">
            <summary>
            Returns an Entity of Type T with the given ID or null if the ID is invalid
            </summary>
            <typeparam name="T">Entity Type to retrieve</typeparam>
            <param name="displayID">DisplayID of the Entity to retrieve</param>
            <returns>an instance of an Entity of Type T or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.StoryByDisplayID(System.String)">
            <summary>
            Returns a Story with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Story to retrieve</param>
            <returns>an instance of a story or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.DefectByDisplayID(System.String)">
            <summary>
            Returns a Defect with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Defect to retrieve</param>
            <returns>an instance of a Defect or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.TestSetByDisplayID(System.String)">
            <summary>
            Returns a TestSet with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the TestSet to retrieve</param>
            <returns>an instance of a TestSet or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.IssueByDisplayID(System.String)">
            <summary>
            Returns an Issue with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Issue to retrieve</param>
            <returns>an instance of a Issue or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.RequestByDisplayID(System.String)">
            <summary>
            Returns a Request with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Request to retrieve</param>
            <returns>an instance of a Request or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ThemeByDisplayID(System.String)">
            <summary>
            Returns a Theme with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Theme to retrieve</param>
            <returns>an instance of a Theme or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.GoalByDisplayID(System.String)">
            <summary>
            Returns a Goal with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Goal to retrieve</param>
            <returns>an instance of a Goal or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.EpicByDisplayID(System.String)">
            <summary>
            Returns a Epic with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Epic to retrieve</param>
            <returns>an instance of a Epic or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.PrimaryWorkitemByDisplayID(System.String)">
            <summary>
            Returns a Primary Workitem with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Primary Workitem to retrieve</param>
            <returns>an instance of a Primary Workitem or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.SecondaryWorkitemByDisplayID(System.String)">
            <summary>
            Returns a Secondary Workitem with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Secondary Workitem to retrieve</param>
            <returns>an instance of a Secondary Workitem or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.WorkitemByDisplayID(System.String)">
            <summary>
            Returns a Workitem with the given ID or null if the ID is invalid
            </summary>
            <param name="displayID">DisplayID of the Workitem to retrieve</param>
            <returns>an instance of a Workitem or null if ID is invalid</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ScheduleByName(System.String)">
            <summary>
            Retrieves the first schedule with the given name or null
            </summary>
            <param name="name">name of the schedule to retrieve</param>
            <returns>the first instance of a Schedule that matches name or null</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ProjectByName(System.String)">
            <summary>
            Retrieves the first project with the given name or null
            </summary>
            <param name="name">name of the project to retrieve</param>
            <returns>the first instance of a Project that matches name or null</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.MemberByUserName(System.String)">
            <summary>
            Retrieves the first Member with the given username
            </summary>
            <param name="userName">The username the user or member uses to login to the VersionOne system</param>
            <returns>The first Member with the given username, or null if none found</returns>
        </member>
        <member name="M:VersionOne.SDK.ObjectModel.V1Instance.GetMethods.ListTypeValues``1">
            <summary>
            Gets the active values of a standard list type.
            </summary>
            <typeparam name="T">The type of Entity that represents the V1 List Type.</typeparam>
            <returns>A list of active values for this list type.</returns>
        </member>
        <member name="T:VersionOne.SDK.ObjectModel.TrackingLevel">
            <summary>
            The level at which DetailEstimate, ToDo and Effort are tracked
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.TrackingLevel.PrimaryWorkitem">
            <summary>
            Track Detail Estimate and ToDo at PrimaryWorkitem (Story/Defect) level only
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.TrackingLevel.SecondaryWorkitem">
            <summary>
            Track Detail Estimate and ToDo at SecondaryWorkitem (Task/Test) level only
            </summary>
        </member>
        <member name="F:VersionOne.SDK.ObjectModel.TrackingLevel.Both">
            <summary>
            Track Detail Estimate and ToDo at both the PrimaryWorkitem and SecondaryWorkitem levels
            </summary>
        </member>
    </members>
</doc>
